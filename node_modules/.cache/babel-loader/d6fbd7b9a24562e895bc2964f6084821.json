{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/sparkline/SparklineTakeBreak.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/sparkline/SparklineTakeBreak.vue","mtime":1627753466727},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Zhbm55L0RvY3VtZW50b3MvQ1VSU09TL0dFUy90dW1pX3Byb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBleGhhbGUgPSBmdW5jdGlvbiBleGhhbGUobXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKTsKICB9KTsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU3BhcmtsaW5lVGFrZUJyZWFrIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hlY2tpbmc6IGZhbHNlLAogICAgICBoZWFydGJlYXRzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhdmc6IGZ1bmN0aW9uIGF2ZygpIHsKICAgICAgdmFyIHN1bSA9IHRoaXMuaGVhcnRiZWF0cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgY3VyKSB7CiAgICAgICAgcmV0dXJuIGFjYyArIGN1cjsKICAgICAgfSwgMCk7CiAgICAgIHZhciBsZW5ndGggPSB0aGlzLmhlYXJ0YmVhdHMubGVuZ3RoOwogICAgICBpZiAoIXN1bSAmJiAhbGVuZ3RoKSByZXR1cm4gMDsKICAgICAgcmV0dXJuIE1hdGguY2VpbChzdW0gLyBsZW5ndGgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMudGFrZVB1bHNlKGZhbHNlKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhlYXJ0YmVhdDogZnVuY3Rpb24gaGVhcnRiZWF0KCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAoMTIwIC0gODApICsgODApOwogICAgfSwKICAgIHRha2VQdWxzZTogZnVuY3Rpb24gdGFrZVB1bHNlKCkgewogICAgICB2YXIgX2FyZ3VtZW50cyA9IGFyZ3VtZW50cywKICAgICAgICAgIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGluaGFsZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpbmhhbGUgPSBfYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgX2FyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3VtZW50c1swXSA6IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpcy5jaGVja2luZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IGluaGFsZTsKCiAgICAgICAgICAgICAgICBpZiAoIV9jb250ZXh0LnQwKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBleGhhbGUoMTAwMCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF90aGlzLmhlYXJ0YmVhdHMgPSBBcnJheS5mcm9tKHsKICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAyMAogICAgICAgICAgICAgICAgfSwgX3RoaXMuaGVhcnRiZWF0KTsKICAgICAgICAgICAgICAgIF90aGlzLmNoZWNraW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SparklineTakeBreak.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,IAAA,MAAA,GAAA,SAAA,MAAA,CAAA,EAAA;AAAA,SACA,IAAA,OAAA,CAAA,UAAA,OAAA;AAAA,WAAA,UAAA,CAAA,OAAA,EAAA,EAAA,CAAA;AAAA,GAAA,CADA;AAAA,CAAA;;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAAA,GAHA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,UAAA,GAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,GAAA;AAAA,eAAA,GAAA,GAAA,GAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,UAAA,CAAA,MAAA;AAEA,UAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,OAAA,CAAA;AAEA,aAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,MAAA,CAAA;AACA;AARA,GAPA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,SAAA,CAAA,KAAA;AACA,GApBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,MAAA,MAAA,EAAA,IAAA,EAAA,CAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,MAAA,0EAAA,IAAA;AACA,gBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AADA,8BAGA,MAHA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGA,MAAA,CAAA,IAAA,CAHA;;AAAA;AAKA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,iBAAA,EAAA,KAAA,CAAA,SAAA,CAAA;AAEA,gBAAA,KAAA,CAAA,QAAA,GAAA,KAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAZA;AAtBA,CAAA","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- SparklineTakeBreak -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        For concise information, a complete chart might be overkill. Using a trend line with gradient provides enough detail for the user without showing too much information.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-card\n                class=\"mx-auto\"\n                color=\"grey lighten-4\"\n                max-width=\"600\"\n            >\n                <v-card-title>\n                <v-icon\n                    :color=\"checking ? 'red lighten-2' : 'info'\"\n                    class=\"mr-12\"\n                    size=\"64\"\n                    @click=\"takePulse\"\n                >\n                    mdi-heart-pulse\n                </v-icon>\n                <v-row align=\"start\">\n                    <div class=\"caption grey--text text-uppercase\">\n                    Heart rate\n                    </div>\n                    <div>\n                    <span\n                        class=\"display-2 font-weight-black\"\n                        v-text=\"avg || 'â€”'\"\n                    ></span>\n                    <strong v-if=\"avg\">BPM</strong>\n                    </div>\n                </v-row>\n\n                <v-spacer></v-spacer>\n\n                <v-btn icon class=\"align-self-start\" size=\"28\">\n                    <v-icon>mdi-arrow-right-thick</v-icon>\n                </v-btn>\n                </v-card-title>\n\n                <v-sheet color=\"transparent\">\n                <v-sparkline\n                    :key=\"String(avg)\"\n                    :smooth=\"16\"\n                    :gradient=\"['#1e88e5', '#00acc1']\"\n                    :line-width=\"3\"\n                    :value=\"heartbeats\"\n                    auto-draw\n                    stroke-linecap=\"round\"\n                ></v-sparkline>\n                </v-sheet>\n            </v-card>\n        </div>\n    </div>\n</template>\n\n<script>\n\nconst exhale = ms =>\n    new Promise(resolve => setTimeout(resolve, ms))\n\nexport default {\n  name: \"SparklineTakeBreak\",\n\n  data: () => ({\n      checking: false,\n      heartbeats: [],\n  }),\n  computed: {\n      avg () {\n        const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)\n        const length = this.heartbeats.length\n\n        if (!sum && !length) return 0\n\n        return Math.ceil(sum / length)\n      },\n    },\n\n    created () {\n      this.takePulse(false)\n    },\n\n    methods: {\n      heartbeat () {\n        return Math.ceil(Math.random() * (120 - 80) + 80)\n      },\n      async takePulse (inhale = true) {\n        this.checking = true\n\n        inhale && await exhale(1000)\n\n        this.heartbeats = Array.from({ length: 20 }, this.heartbeat)\n\n        this.checking = false\n      },\n    },\n};\n</script>"],"sourceRoot":"src/components/vuetifyComponents/sparkline"}]}