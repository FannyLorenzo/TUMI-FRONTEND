{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tables/table-data-table/table-data/DatatablesSortonMultipleColumns.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tables/table-data-table/table-data/DatatablesSortonMultipleColumns.vue","mtime":1627753466783},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEYXRhdGFibGVzU29ydG9uTXVsdGlwbGVDb2x1bW5zIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAiRGVzc2VydCAoMTAwZyBzZXJ2aW5nKSIsCiAgICAgICAgYWxpZ246ICJzdGFydCIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlLAogICAgICAgIHZhbHVlOiAibmFtZSIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJDYWxvcmllcyIsCiAgICAgICAgdmFsdWU6ICJjYWxvcmllcyIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJGYXQgKGcpIiwKICAgICAgICB2YWx1ZTogImZhdCIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJDYXJicyAoZykiLAogICAgICAgIHZhbHVlOiAiY2FyYnMiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiUHJvdGVpbiAoZykiLAogICAgICAgIHZhbHVlOiAicHJvdGVpbiIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJJcm9uICglKSIsCiAgICAgICAgdmFsdWU6ICJpcm9uIgogICAgICB9XSwKICAgICAgZGVzc2VydHM6IFt7CiAgICAgICAgbmFtZTogIkZyb3plbiBZb2d1cnQiLAogICAgICAgIGNhbG9yaWVzOiAyMDAsCiAgICAgICAgZmF0OiA2LjAsCiAgICAgICAgY2FyYnM6IDI0LAogICAgICAgIHByb3RlaW46IDQuMCwKICAgICAgICBpcm9uOiAiMSUiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiSWNlIGNyZWFtIHNhbmR3aWNoIiwKICAgICAgICBjYWxvcmllczogMjAwLAogICAgICAgIGZhdDogOS4wLAogICAgICAgIGNhcmJzOiAzNywKICAgICAgICBwcm90ZWluOiA0LjMsCiAgICAgICAgaXJvbjogIjElIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkVjbGFpciIsCiAgICAgICAgY2Fsb3JpZXM6IDMwMCwKICAgICAgICBmYXQ6IDE2LjAsCiAgICAgICAgY2FyYnM6IDIzLAogICAgICAgIHByb3RlaW46IDYuMCwKICAgICAgICBpcm9uOiAiNyUiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiQ3VwY2FrZSIsCiAgICAgICAgY2Fsb3JpZXM6IDMwMCwKICAgICAgICBmYXQ6IDMuNywKICAgICAgICBjYXJiczogNjcsCiAgICAgICAgcHJvdGVpbjogNC4zLAogICAgICAgIGlyb246ICI4JSIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJHaW5nZXJicmVhZCIsCiAgICAgICAgY2Fsb3JpZXM6IDQwMCwKICAgICAgICBmYXQ6IDE2LjAsCiAgICAgICAgY2FyYnM6IDQ5LAogICAgICAgIHByb3RlaW46IDMuOSwKICAgICAgICBpcm9uOiAiMTYlIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkplbGx5IGJlYW4iLAogICAgICAgIGNhbG9yaWVzOiA0MDAsCiAgICAgICAgZmF0OiAwLjAsCiAgICAgICAgY2FyYnM6IDk0LAogICAgICAgIHByb3RlaW46IDAuMCwKICAgICAgICBpcm9uOiAiMCUiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiTG9sbGlwb3AiLAogICAgICAgIGNhbG9yaWVzOiA0MDAsCiAgICAgICAgZmF0OiAwLjIsCiAgICAgICAgY2FyYnM6IDk4LAogICAgICAgIHByb3RlaW46IDAsCiAgICAgICAgaXJvbjogIjIlIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkhvbmV5Y29tYiIsCiAgICAgICAgY2Fsb3JpZXM6IDQwMCwKICAgICAgICBmYXQ6IDMuMiwKICAgICAgICBjYXJiczogODcsCiAgICAgICAgcHJvdGVpbjogNi41LAogICAgICAgIGlyb246ICI0NSUiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiRG9udXQiLAogICAgICAgIGNhbG9yaWVzOiA1MDAsCiAgICAgICAgZmF0OiAyNS4wLAogICAgICAgIGNhcmJzOiA1MSwKICAgICAgICBwcm90ZWluOiA0LjksCiAgICAgICAgaXJvbjogIjIyJSIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJLaXRLYXQiLAogICAgICAgIGNhbG9yaWVzOiA1MDAsCiAgICAgICAgZmF0OiAyNi4wLAogICAgICAgIGNhcmJzOiA2NSwKICAgICAgICBwcm90ZWluOiA3LAogICAgICAgIGlyb246ICI2JSIKICAgICAgfV0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["DatatablesSortonMultipleColumns.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- DatatablesSortonMultipleColumns -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      Using the\n      <code>multi-sort</code> prop will enable you to sort on multiple columns at the same time. When enabled, you can pass arrays to both\n      <code>sort-by</code> and\n      <code>sort-desc</code> to programmatically control the sorting, instead of single values.\n    </v-list-item-subtitle>\n    <div class=\"mt-4\">\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"desserts\"\n        :sort-by=\"['calories', 'fat']\"\n        :sort-desc=\"[false, true]\"\n        multi-sort\n        class=\"elevation-0 border\"\n      ></v-data-table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DatatablesSortonMultipleColumns\",\n\n  data: () => ({\n    headers: [\n      {\n        text: \"Dessert (100g serving)\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\"\n      },\n      { text: \"Calories\", value: \"calories\" },\n      { text: \"Fat (g)\", value: \"fat\" },\n      { text: \"Carbs (g)\", value: \"carbs\" },\n      { text: \"Protein (g)\", value: \"protein\" },\n      { text: \"Iron (%)\", value: \"iron\" }\n    ],\n    desserts: [\n      {\n        name: \"Frozen Yogurt\",\n        calories: 200,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        iron: \"1%\"\n      },\n      {\n        name: \"Ice cream sandwich\",\n        calories: 200,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        iron: \"1%\"\n      },\n      {\n        name: \"Eclair\",\n        calories: 300,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        iron: \"7%\"\n      },\n      {\n        name: \"Cupcake\",\n        calories: 300,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        iron: \"8%\"\n      },\n      {\n        name: \"Gingerbread\",\n        calories: 400,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9,\n        iron: \"16%\"\n      },\n      {\n        name: \"Jelly bean\",\n        calories: 400,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0,\n        iron: \"0%\"\n      },\n      {\n        name: \"Lollipop\",\n        calories: 400,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0,\n        iron: \"2%\"\n      },\n      {\n        name: \"Honeycomb\",\n        calories: 400,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5,\n        iron: \"45%\"\n      },\n      {\n        name: \"Donut\",\n        calories: 500,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9,\n        iron: \"22%\"\n      },\n      {\n        name: \"KitKat\",\n        calories: 500,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7,\n        iron: \"6%\"\n      }\n    ]\n  })\n};\n</script>"],"sourceRoot":"src/views/tables/table-data-table/table-data"}]}