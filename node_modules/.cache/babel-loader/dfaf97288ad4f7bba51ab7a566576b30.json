{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/eslint-loader/index.js??ref--13-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/contact/validationMixin.js","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/contact/validationMixin.js","mtime":1627753466763},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdmFsaWRhdGlvbk1peGluIH0gZnJvbSAidnVlbGlkYXRlIjsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAibG9kYXNoIjsKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW3ZhbGlkYXRpb25NaXhpbl0sCiAgbWV0aG9kczogewogICAgZmllbGRFcnJvcnM6IGZ1bmN0aW9uIGZpZWxkRXJyb3JzKG5hbWUpIHsKICAgICAgdmFyIHJ1bGU7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgdmFyIGZpZWxkID0gZ2V0KHRoaXMuJHYsIG5hbWUpOwogICAgICB2YXIgbWVzc2FnZXMgPSBnZXQodGhpcy4kb3B0aW9ucy52YWxpZGF0aW9uTWVzc2FnZXMsIG5hbWUpOwogICAgICBpZiAoIWZpZWxkLiRkaXJ0eSkgcmV0dXJuIGVycm9yczsKCiAgICAgIGlmIChtZXNzYWdlcykgewogICAgICAgIGZvciAocnVsZSBpbiBtZXNzYWdlcykgewogICAgICAgICAgaWYgKGZpZWxkW3J1bGVdID09PSBmYWxzZSAmJiBtZXNzYWdlc1tydWxlXSkgewogICAgICAgICAgICBlcnJvcnMucHVzaChtZXNzYWdlc1tydWxlXSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZXJyb3JzOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/contact/validationMixin.js"],"names":["validationMixin","get","mixins","methods","fieldErrors","name","rule","errors","field","$v","messages","$options","validationMessages","$dirty","push"],"mappings":"AAAA,SAASA,eAAT,QAAgC,WAAhC;AACA,SAASC,GAAT,QAAoB,QAApB;AAEA,eAAe;AACXC,EAAAA,MAAM,EAAE,CAACF,eAAD,CADG;AAEXG,EAAAA,OAAO,EAAE;AACLC,IAAAA,WADK,uBACOC,IADP,EACa;AACd,UAAIC,IAAJ;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,KAAK,GAAGP,GAAG,CAAC,KAAKQ,EAAN,EAAUJ,IAAV,CAAjB;AACA,UAAMK,QAAQ,GAAGT,GAAG,CAAC,KAAKU,QAAL,CAAcC,kBAAf,EAAmCP,IAAnC,CAApB;AAEA,UAAI,CAACG,KAAK,CAACK,MAAX,EAAmB,OAAON,MAAP;;AAEnB,UAAIG,QAAJ,EAAc;AACV,aAAKJ,IAAL,IAAaI,QAAb,EAAuB;AACnB,cAAIF,KAAK,CAACF,IAAD,CAAL,KAAgB,KAAhB,IAAyBI,QAAQ,CAACJ,IAAD,CAArC,EAA6C;AACzCC,YAAAA,MAAM,CAACO,IAAP,CAAYJ,QAAQ,CAACJ,IAAD,CAApB;AACH;AACJ;AACJ;;AACD,aAAOC,MAAP;AACH;AAjBI;AAFE,CAAf","sourcesContent":["import { validationMixin } from \"vuelidate\";\nimport { get } from \"lodash\";\n\nexport default {\n    mixins: [validationMixin],\n    methods: {\n        fieldErrors(name) {\n            let rule;\n            const errors = [];\n            const field = get(this.$v, name);\n            const messages = get(this.$options.validationMessages, name);\n\n            if (!field.$dirty) return errors;\n\n            if (messages) {\n                for (rule in messages) {\n                    if (field[rule] === false && messages[rule]) {\n                        errors.push(messages[rule]);\n                    }\n                }\n            }\n            return errors;\n        }\n    }\n};\n"]}]}