{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-instantsearch/es/src/components/Menu.vue.js","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-instantsearch/es/src/components/Menu.vue.js","mtime":1619538972000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0IHsgY3JlYXRlU3VpdE1peGluIGFzIGUgfSBmcm9tICIuLi9taXhpbnMvc3VpdC5qcyI7CmltcG9ydCB7IGNyZWF0ZVdpZGdldE1peGluIGFzIHQgfSBmcm9tICIuLi9taXhpbnMvd2lkZ2V0LmpzIjsKaW1wb3J0IHsgY29ubmVjdE1lbnUgYXMgcyB9IGZyb20gImluc3RhbnRzZWFyY2guanMvZXMvY29ubmVjdG9ycyI7CmltcG9ydCB7IGNyZWF0ZVBhbmVsQ29uc3VtZXJNaXhpbiBhcyBvIH0gZnJvbSAiLi4vbWl4aW5zL3BhbmVsLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgdmFyIGUgPSB0aGlzLAogICAgICAgIHQgPSBlLiRjcmVhdGVFbGVtZW50LAogICAgICAgIHMgPSBlLl9zZWxmLl9jIHx8IHQ7CiAgICByZXR1cm4gZS5zdGF0ZSA/IHMoImRpdiIsIHsKICAgICAgY2xhc3M6IFtlLnN1aXQoKSwgIWUuc3RhdGUuY2FuUmVmaW5lICYmIGUuc3VpdCgiIiwgIm5vUmVmaW5lbWVudCIpXQogICAgfSwgW2UuX3QoImRlZmF1bHQiLCBbcygidWwiLCB7CiAgICAgIGNsYXNzOiBlLnN1aXQoImxpc3QiKQogICAgfSwgZS5fbChlLnN0YXRlLml0ZW1zLCBmdW5jdGlvbiAodCkgewogICAgICByZXR1cm4gcygibGkiLCB7CiAgICAgICAga2V5OiB0LnZhbHVlLAogICAgICAgIGNsYXNzOiBbZS5zdWl0KCJpdGVtIiksIHQuaXNSZWZpbmVkICYmIGUuc3VpdCgiaXRlbSIsICJzZWxlY3RlZCIpXQogICAgICB9LCBbcygiYSIsIHsKICAgICAgICBjbGFzczogZS5zdWl0KCJsaW5rIiksCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGhyZWY6IGUuc3RhdGUuY3JlYXRlVVJMKHQudmFsdWUpCiAgICAgICAgfSwKICAgICAgICBvbjogewogICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKHMpIHsKICAgICAgICAgICAgcy5wcmV2ZW50RGVmYXVsdCgpLCBlLnN0YXRlLnJlZmluZSh0LnZhbHVlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIFtzKCJzcGFuIiwgewogICAgICAgIGNsYXNzOiBlLnN1aXQoImxhYmVsIikKICAgICAgfSwgW2UuX3YoZS5fcyh0LmxhYmVsKSldKSwgZS5fdigiICIpLCBzKCJzcGFuIiwgewogICAgICAgIGNsYXNzOiBlLnN1aXQoImNvdW50IikKICAgICAgfSwgW2UuX3YoZS5fcyh0LmNvdW50KSldKV0pXSk7CiAgICB9KSksIGUuX3YoIiAiKSwgZS5zaG93U2hvd01vcmVCdXR0b24gPyBzKCJidXR0b24iLCB7CiAgICAgIGNsYXNzOiBbZS5zdWl0KCJzaG93TW9yZSIpLCAhZS5zdGF0ZS5jYW5Ub2dnbGVTaG93TW9yZSAmJiBlLnN1aXQoInNob3dNb3JlIiwgImRpc2FibGVkIildLAogICAgICBhdHRyczogewogICAgICAgIGRpc2FibGVkOiAhZS5zdGF0ZS5jYW5Ub2dnbGVTaG93TW9yZQogICAgICB9LAogICAgICBvbjogewogICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayh0KSB7CiAgICAgICAgICB0LnByZXZlbnREZWZhdWx0KCksIGUuc3RhdGUudG9nZ2xlU2hvd01vcmUoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIFtlLl90KCJzaG93TW9yZUxhYmVsIiwgW2UuX3YoZS5fcyhlLnN0YXRlLmlzU2hvd2luZ01vcmUgPyAiU2hvdyBsZXNzIiA6ICJTaG93IG1vcmUiKSldLCB7CiAgICAgIGlzU2hvd2luZ01vcmU6IGUuc3RhdGUuaXNTaG93aW5nTW9yZQogICAgfSldLCAyKSA6IGUuX2UoKV0sIHsKICAgICAgaXRlbXM6IGUuc3RhdGUuaXRlbXMsCiAgICAgIGNhblJlZmluZTogZS5zdGF0ZS5jYW5SZWZpbmUsCiAgICAgIGNhblRvZ2dsZVNob3dNb3JlOiBlLnN0YXRlLmNhblRvZ2dsZVNob3dNb3JlLAogICAgICBpc1Nob3dpbmdNb3JlOiBlLnN0YXRlLmlzU2hvd2luZ01vcmUsCiAgICAgIHJlZmluZTogZS5zdGF0ZS5yZWZpbmUsCiAgICAgIGNyZWF0ZVVSTDogZS5zdGF0ZS5jcmVhdGVVUkwsCiAgICAgIHRvZ2dsZVNob3dNb3JlOiBlLnN0YXRlLnRvZ2dsZVNob3dNb3JlLAogICAgICBzZW5kRXZlbnQ6IGUuc3RhdGUuc2VuZEV2ZW50CiAgICB9KV0sIDIpIDogZS5fZSgpOwogIH0sCiAgc3RhdGljUmVuZGVyRm5zOiBbXSwKICBuYW1lOiAiQWlzTWVudSIsCiAgbWl4aW5zOiBbZSh7CiAgICBuYW1lOiAiTWVudSIKICB9KSwgdCh7CiAgICBjb25uZWN0b3I6IHMKICB9KSwgbyh7CiAgICBtYXBTdGF0ZVRvQ2FuUmVmaW5lOiBmdW5jdGlvbiBtYXBTdGF0ZVRvQ2FuUmVmaW5lKGUpIHsKICAgICAgcmV0dXJuIEJvb2xlYW4oZS5jYW5SZWZpbmUpOwogICAgfQogIH0pXSwKICBwcm9wczogewogICAgYXR0cmlidXRlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6ICEwCiAgICB9LAogICAgbGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMAogICAgfSwKICAgIHNob3dNb3JlTGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyMAogICAgfSwKICAgIHNob3dNb3JlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6ICExCiAgICB9LAogICAgc29ydEJ5OiB7CiAgICAgIHR5cGU6IFtBcnJheSwgRnVuY3Rpb25dLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gWyJjb3VudDpkZXNjIiwgIm5hbWU6YXNjIl07CiAgICAgIH0KICAgIH0sCiAgICB0cmFuc2Zvcm1JdGVtczogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoZSkgewogICAgICAgIHJldHVybiBlOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgd2lkZ2V0UGFyYW1zOiBmdW5jdGlvbiB3aWRnZXRQYXJhbXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYXR0cmlidXRlOiB0aGlzLmF0dHJpYnV0ZSwKICAgICAgICBsaW1pdDogdGhpcy5saW1pdCwKICAgICAgICBzaG93TW9yZTogdGhpcy5zaG93TW9yZSwKICAgICAgICBzaG93TW9yZUxpbWl0OiB0aGlzLnNob3dNb3JlTGltaXQsCiAgICAgICAgc29ydEJ5OiB0aGlzLnNvcnRCeSwKICAgICAgICB0cmFuc2Zvcm1JdGVtczogdGhpcy50cmFuc2Zvcm1JdGVtcwogICAgICB9OwogICAgfSwKICAgIHNob3dTaG93TW9yZUJ1dHRvbjogZnVuY3Rpb24gc2hvd1Nob3dNb3JlQnV0dG9uKCkgewogICAgICByZXR1cm4gdGhpcy5zdGF0ZS5jYW5SZWZpbmUgJiYgdGhpcy5zaG93TW9yZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["../../../src/components/Menu.vue"],"names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectMenu","createPanelConsumerMixin","mapStateToCanRefine","state","Boolean","canRefine","props","attribute","type","String","required","limit","Number","default","showMoreLimit","showMore","sortBy","Array","Function","transformItems","items","computed","widgetParams","this","showShowMoreButton"],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <span :class=\"suit('label')\">{{ item.label }}</span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"showShowMoreButton\"\n        :class=\"[suit('showMore'), !state.canToggleShowMore && suit('showMore', 'disabled')]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore()\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenu',\n  mixins: [\n    createSuitMixin({ name: 'Menu' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => Boolean(state.canRefine),\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    // TODO: implement searchable in connector\n    // searchable: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: 20,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default() {\n        return ['count:desc', 'name:asc'];\n      },\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    showShowMoreButton() {\n      return this.state.canRefine && this.showMore;\n    },\n  },\n};\n</script>\n"]}]}