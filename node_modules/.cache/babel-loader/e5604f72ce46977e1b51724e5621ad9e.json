{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/email/EmailList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/email/EmailList.vue","mtime":1627753466763},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCB7IGdldE1haWxCeVR5cGUgfSBmcm9tICJAL3ZpZXdzL2FwcHMvZW1haWwvYXBpL21haWwiOwppbXBvcnQgeyBnZXRNYWlsQnlUYWcgfSBmcm9tICJAL3ZpZXdzL2FwcHMvZW1haWwvYXBpL21haWwiOwpWdWUuZmlsdGVyKCJ1cHBlcmNhc2UiLCBmdW5jdGlvbiAodmFsdWUpIHsKICByZXR1cm4gdmFsdWUudG9VcHBlckNhc2UoKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRW1haWxMaXN0IiwKICBwcm9wczogewogICAgbWFpbFR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiYWxsIgogICAgfSwKICAgIG1haWxUYWc6IHsKICAgICAgdGFnOiBTdHJpbmcKICAgIH0sCiAgICBpc1NlbGVjdGVkYTogewogICAgICB0eXBlOiBCb29sZWFuCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWQ6IFswXSwKICAgICAgaXN0b2dnbGU6IHRydWUsCiAgICAgIGlzU2VsZWN0ZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1haWxzOiBmdW5jdGlvbiBtYWlscygpIHsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnBhcmFtcy5tYWlsVHlwZSkgewogICAgICAgIHJldHVybiBnZXRNYWlsQnlUeXBlKHRoaXMuJHJvdXRlLnBhcmFtcy5tYWlsVHlwZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldE1haWxCeVRhZyh0aGlzLiRyb3V0ZS5wYXJhbXMubWFpbFRhZyk7CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEVtYWlsRGV0YWlsOiBmdW5jdGlvbiBFbWFpbERldGFpbCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgiQC92aWV3cy9hcHBzL2VtYWlsL0VtYWlsRGV0YWlsIik7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjb21wdXRlTWFpbFBhdGg6IGZ1bmN0aW9uIGNvbXB1dGVNYWlsUGF0aChpZCkgewogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLm1haWxUeXBlKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHBhdGg6ICIvYXBwcy9lbWFpbC8iICsgdGhpcy4kcm91dGUucGFyYW1zLm1haWxUeXBlICsgIi8wLyIgKyBpZAogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHBhdGg6ICIvYXBwcy9lbWFpbC8iICsgIjAvIiArIHRoaXMuJHJvdXRlLnBhcmFtcy5tYWlsVGFnICsgIi8wLyIgKyBpZAogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICB0b2dnbGVTaWRlYmFyOiBmdW5jdGlvbiB0b2dnbGVTaWRlYmFyKCkgewogICAgICB0aGlzLiRlbWl0KCJ0b2dnbGVzIik7CiAgICB9LAogICAgdG9nZ2xlRGV0YWlsOiBmdW5jdGlvbiB0b2dnbGVEZXRhaWwoKSB7CiAgICAgIHRoaXMuaXN0b2dnbGUgPSAhdGhpcy5pc3RvZ2dsZTsKICAgICAgdGhpcy5pc1NlbGVjdGVkID0gdHJ1ZTsKICAgIH0sCiAgICBmb3JtYXREYXRlOiBmdW5jdGlvbiBmb3JtYXREYXRlKHMpIHsKICAgICAgLy9sZXQgb3B0aW9ucyA9IHsgd2Vla2RheTogJ2xvbmcnLCB5ZWFyOiAnbnVtZXJpYycsIG1vbnRoOiAnbG9uZycsIGRheTogJ251bWVyaWMnIH07CiAgICAgIHZhciBtb250aHMgPSBbIkphbnVhcnkiLCAiRmVicnVhcnkiLCAiTWFyY2giLCAiQXByaWwiLCAiTWF5IiwgIkp1bmUiLCAiSnVseSIsICJBdWd1c3QiLCAiU2VwdGVtYmVyIiwgIk9jdG9iZXIiLCAiTm92ZW1iZXIiLCAiRGVjZW1iZXIiXTsKICAgICAgdmFyIGQgPSBuZXcgRGF0ZShzKTsKICAgICAgcmV0dXJuIG1vbnRoc1tkLmdldE1vbnRoKCldICsgIiAiICsgZC5nZXREYXkoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJHJvb3QuJG9uKCJjbGlja2VkU29tZXRoaW5nIiwgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5pc1NlbGVjdGVkID0gZmFsc2U7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["EmailList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,OAAA,GAAA,MAAA,KAAA;AACA,SAAA,aAAA,QAAA,6BAAA;AACA,SAAA,YAAA,QAAA,6BAAA;AACA,GAAA,CAAA,MAAA,CAAA,WAAA,EAAA,UAAA,KAAA,EAAA;AACA,SAAA,KAAA,CAAA,WAAA,EAAA;AACA,CAFA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,GAAA,EAAA;AADA,KALA;AAQA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AARA,GAFA;AAcA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,QAAA,EAAA,CAAA,CAAA,CADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAAA,GAdA;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EAAA;AACA,eAAA,aAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,YAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA;AACA;AAPA,GAnBA;AA4BA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AAAA,aAAA,OAAA,gCAAA,CAAA;AAAA;AADA,GA5BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,EADA,EACA;AACA,UAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EAAA;AACA,eAAA;AACA,UAAA,IAAA,EAAA,iBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,GAAA,KAAA,GAAA;AADA,SAAA;AAGA,OAJA,MAIA;AACA,eAAA;AACA,UAAA,IAAA,EAAA,iBAAA,IAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA,GAAA,KAAA,GAAA;AADA,SAAA;AAGA;AACA,KAXA;AAaA,IAAA,aAbA,2BAaA;AACA,WAAA,KAAA,CAAA,SAAA;AACA,KAfA;AAgBA,IAAA,YAhBA,0BAgBA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KAnBA;AAqBA,IAAA,UArBA,sBAqBA,CArBA,EAqBA;AACA;AACA,UAAA,MAAA,GAAA,CACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CAAA;AAcA,UAAA,CAAA,GAAA,IAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA,GAAA,GAAA,GAAA,CAAA,CAAA,MAAA,EAAA;AACA;AAvCA,GA/BA;AAwEA,EAAA,OAxEA,qBAwEA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,KAFA;AAGA;AA5EA,CAAA","sourcesContent":["<template>\n  <v-container fluid class=\"pt-0\">\n    <v-row no-guuters>\n      <v-col cols=\"12\" md=\"4\" class=\"border-right px-0\">\n        <!-- Emails -->\n        <v-toolbar dense class=\"elevation-0\">\n          <v-app-bar-nav-icon @click=\"toggleSidebar()\" class=\"d-block d-md-none\"></v-app-bar-nav-icon>\n          <span\n            class=\"ml-2\"\n            v-if=\"$route.params.mailType\"\n          >{{this.$route.params.mailType | uppercase}}</span>\n          <span class=\"ml-2\" v-if=\"$route.params.mailTag\">{{this.$route.params.mailTag | uppercase}}</span>\n        </v-toolbar>\n        <v-divider class=\"mt-2\"></v-divider>\n        <!-- Listing of emails -->\n        <div v-bar>\n          <v-list two-line class=\"email-list\">\n            <template v-for=\"(item, index) in mails\">\n              <v-list-item\n                ripple\n                :key=\"index\"\n                :to=\"computeMailPath(item.uuid)\"\n                @click=\"toggleDetail()\"\n              >\n                <v-list-item-action class=\"mr-3\">\n                  <v-checkbox></v-checkbox>\n                </v-list-item-action>\n                <v-list-item-avatar class=\"mr-3\">\n                  <img :src=\"require('@/assets/images/users' + item.from.avatar)\" />\n                </v-list-item-avatar>\n                <v-list-item-content>\n                  <v-list-item-title>{{ item.from.name }}</v-list-item-title>\n                  <v-list-item-subtitle>{{ item.title }}</v-list-item-subtitle>\n                </v-list-item-content>\n                <v-list-item-action>\n                  <v-list-item-action-text>{{ formatDate(item.created_at) }}</v-list-item-action-text>\n                  <v-icon color=\"warning\" v-if=\"item.type == 'starred'\">mdi-star</v-icon>\n                  <v-icon color=\"gray darken-2\" v-else>mdi-star-outline</v-icon>\n                </v-list-item-action>\n              </v-list-item>\n              <v-divider :key=\"'divider' + index\"></v-divider>\n            </template>\n          </v-list>\n        </div>\n      </v-col>\n      <!-- Email Detail -->\n      <v-col\n        cols=\"12\"\n        md=\"8\"\n        class=\"pa-0 email-detail\"\n        :class=\"[ istoggle ? 'close-detail' : 'show-detail']\"\n      >\n        <EmailDetail @togglesdetail=\"toggleDetail\" :isSelected=\"isSelected\"></EmailDetail>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { getMailByType } from \"@/views/apps/email/api/mail\";\nimport { getMailByTag } from \"@/views/apps/email/api/mail\";\nVue.filter(\"uppercase\", function(value) {\n  return value.toUpperCase();\n});\nexport default {\n  name: \"EmailList\",\n  props: {\n    mailType: {\n      type: String,\n      default: \"all\"\n    },\n    mailTag: {\n      tag: String\n    },\n    isSelecteda: {\n      type: Boolean\n    }\n  },\n  data: () => ({\n    selected: [0],\n    istoggle: true,\n    isSelected: false\n  }),\n  computed: {\n    mails() {\n      if (this.$route.params.mailType) {\n        return getMailByType(this.$route.params.mailType);\n      } else {\n        return getMailByTag(this.$route.params.mailTag);\n      }\n    }\n  },\n  components: {\n    EmailDetail: () => import(\"@/views/apps/email/EmailDetail\")\n  },\n  methods: {\n    computeMailPath(id) {\n      if (this.$route.params.mailType) {\n        return {\n          path: \"/apps/email/\" + this.$route.params.mailType + \"/0/\" + id\n        };\n      } else {\n        return {\n          path: \"/apps/email/\" + \"0/\" + this.$route.params.mailTag + \"/0/\" + id\n        };\n      }\n    },\n\n    toggleSidebar() {\n      this.$emit(\"toggles\");\n    },\n    toggleDetail() {\n      this.istoggle = !this.istoggle;\n      this.isSelected = true;\n    },\n\n    formatDate(s) {\n      //let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      var months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      var d = new Date(s);\n      return months[d.getMonth()] + \" \" + d.getDay();\n    }\n  },\n  mounted() {\n    this.$root.$on(\"clickedSomething\", () => {\n      this.isSelected = false;\n    });\n  }\n};\n</script>\n"],"sourceRoot":"src/views/apps/email"}]}