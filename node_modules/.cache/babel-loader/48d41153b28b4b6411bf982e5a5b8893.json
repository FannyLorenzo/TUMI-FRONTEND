{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tables/table-data-table/table-data/DatatablesPaginateSortServerside.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tables/table-data-table/table-data/DatatablesPaginateSortServerside.vue","mtime":1627753466783},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEYXRhdGFibGVzUGFnaW5hdGVTb3J0U2VydmVyc2lkZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvdGFsRGVzc2VydHM6IDAsCiAgICAgIGRlc3NlcnRzOiBbXSwKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgb3B0aW9uczoge30sCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogIkRlc3NlcnQgKDEwMGcgc2VydmluZykiLAogICAgICAgIGFsaWduOiAic3RhcnQiLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB2YWx1ZTogIm5hbWUiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiQ2Fsb3JpZXMiLAogICAgICAgIHZhbHVlOiAiY2Fsb3JpZXMiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRmF0IChnKSIsCiAgICAgICAgdmFsdWU6ICJmYXQiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiQ2FyYnMgKGcpIiwKICAgICAgICB2YWx1ZTogImNhcmJzIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIlByb3RlaW4gKGcpIiwKICAgICAgICB2YWx1ZTogInByb3RlaW4iCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiSXJvbiAoJSkiLAogICAgICAgIHZhbHVlOiAiaXJvbiIKICAgICAgfV0KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgb3B0aW9uczogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHRoaXMuZ2V0RGF0YUZyb21BcGkoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICBfdGhpcy5kZXNzZXJ0cyA9IGRhdGEuaXRlbXM7CiAgICAgICAgICBfdGhpcy50b3RhbERlc3NlcnRzID0gZGF0YS50b3RhbDsKICAgICAgICB9KTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHRoaXMuZ2V0RGF0YUZyb21BcGkoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzMi5kZXNzZXJ0cyA9IGRhdGEuaXRlbXM7CiAgICAgIF90aGlzMi50b3RhbERlc3NlcnRzID0gZGF0YS50b3RhbDsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RGF0YUZyb21BcGk6IGZ1bmN0aW9uIGdldERhdGFGcm9tQXBpKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIHZhciBfdGhpczMkb3B0aW9ucyA9IF90aGlzMy5vcHRpb25zLAogICAgICAgICAgICBzb3J0QnkgPSBfdGhpczMkb3B0aW9ucy5zb3J0QnksCiAgICAgICAgICAgIHNvcnREZXNjID0gX3RoaXMzJG9wdGlvbnMuc29ydERlc2MsCiAgICAgICAgICAgIHBhZ2UgPSBfdGhpczMkb3B0aW9ucy5wYWdlLAogICAgICAgICAgICBpdGVtc1BlclBhZ2UgPSBfdGhpczMkb3B0aW9ucy5pdGVtc1BlclBhZ2U7CgogICAgICAgIHZhciBpdGVtcyA9IF90aGlzMy5nZXREZXNzZXJ0cygpOwoKICAgICAgICB2YXIgdG90YWwgPSBpdGVtcy5sZW5ndGg7CgogICAgICAgIGlmIChzb3J0QnkubGVuZ3RoID09PSAxICYmIHNvcnREZXNjLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgaXRlbXMgPSBpdGVtcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgIHZhciBzb3J0QSA9IGFbc29ydEJ5WzBdXTsKICAgICAgICAgICAgdmFyIHNvcnRCID0gYltzb3J0QnlbMF1dOwoKICAgICAgICAgICAgaWYgKHNvcnREZXNjWzBdKSB7CiAgICAgICAgICAgICAgaWYgKHNvcnRBIDwgc29ydEIpIHJldHVybiAxOwogICAgICAgICAgICAgIGlmIChzb3J0QSA+IHNvcnRCKSByZXR1cm4gLTE7CiAgICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgaWYgKHNvcnRBIDwgc29ydEIpIHJldHVybiAtMTsKICAgICAgICAgICAgICBpZiAoc29ydEEgPiBzb3J0QikgcmV0dXJuIDE7CiAgICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgaWYgKGl0ZW1zUGVyUGFnZSA+IDApIHsKICAgICAgICAgIGl0ZW1zID0gaXRlbXMuc2xpY2UoKHBhZ2UgLSAxKSAqIGl0ZW1zUGVyUGFnZSwgcGFnZSAqIGl0ZW1zUGVyUGFnZSk7CiAgICAgICAgfQoKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgaXRlbXM6IGl0ZW1zLAogICAgICAgICAgICB0b3RhbDogdG90YWwKICAgICAgICAgIH0pOwogICAgICAgIH0sIDEwMDApOwogICAgICB9KTsKICAgIH0sCiAgICBnZXREZXNzZXJ0czogZnVuY3Rpb24gZ2V0RGVzc2VydHMoKSB7CiAgICAgIHJldHVybiBbewogICAgICAgIG5hbWU6ICJGcm96ZW4gWW9ndXJ0IiwKICAgICAgICBjYWxvcmllczogMTU5LAogICAgICAgIGZhdDogNi4wLAogICAgICAgIGNhcmJzOiAyNCwKICAgICAgICBwcm90ZWluOiA0LjAsCiAgICAgICAgaXJvbjogIjElIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkljZSBjcmVhbSBzYW5kd2ljaCIsCiAgICAgICAgY2Fsb3JpZXM6IDIzNywKICAgICAgICBmYXQ6IDkuMCwKICAgICAgICBjYXJiczogMzcsCiAgICAgICAgcHJvdGVpbjogNC4zLAogICAgICAgIGlyb246ICIxJSIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJFY2xhaXIiLAogICAgICAgIGNhbG9yaWVzOiAyNjIsCiAgICAgICAgZmF0OiAxNi4wLAogICAgICAgIGNhcmJzOiAyMywKICAgICAgICBwcm90ZWluOiA2LjAsCiAgICAgICAgaXJvbjogIjclIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkN1cGNha2UiLAogICAgICAgIGNhbG9yaWVzOiAzMDUsCiAgICAgICAgZmF0OiAzLjcsCiAgICAgICAgY2FyYnM6IDY3LAogICAgICAgIHByb3RlaW46IDQuMywKICAgICAgICBpcm9uOiAiOCUiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiR2luZ2VyYnJlYWQiLAogICAgICAgIGNhbG9yaWVzOiAzNTYsCiAgICAgICAgZmF0OiAxNi4wLAogICAgICAgIGNhcmJzOiA0OSwKICAgICAgICBwcm90ZWluOiAzLjksCiAgICAgICAgaXJvbjogIjE2JSIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJKZWxseSBiZWFuIiwKICAgICAgICBjYWxvcmllczogMzc1LAogICAgICAgIGZhdDogMC4wLAogICAgICAgIGNhcmJzOiA5NCwKICAgICAgICBwcm90ZWluOiAwLjAsCiAgICAgICAgaXJvbjogIjAlIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkxvbGxpcG9wIiwKICAgICAgICBjYWxvcmllczogMzkyLAogICAgICAgIGZhdDogMC4yLAogICAgICAgIGNhcmJzOiA5OCwKICAgICAgICBwcm90ZWluOiAwLAogICAgICAgIGlyb246ICIyJSIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJIb25leWNvbWIiLAogICAgICAgIGNhbG9yaWVzOiA0MDgsCiAgICAgICAgZmF0OiAzLjIsCiAgICAgICAgY2FyYnM6IDg3LAogICAgICAgIHByb3RlaW46IDYuNSwKICAgICAgICBpcm9uOiAiNDUlIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIkRvbnV0IiwKICAgICAgICBjYWxvcmllczogNDUyLAogICAgICAgIGZhdDogMjUuMCwKICAgICAgICBjYXJiczogNTEsCiAgICAgICAgcHJvdGVpbjogNC45LAogICAgICAgIGlyb246ICIyMiUiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiS2l0S2F0IiwKICAgICAgICBjYWxvcmllczogNTE4LAogICAgICAgIGZhdDogMjYuMCwKICAgICAgICBjYXJiczogNjUsCiAgICAgICAgcHJvdGVpbjogNywKICAgICAgICBpcm9uOiAiNiUiCiAgICAgIH1dOwogICAgfQogIH0KfTs="},{"version":3,"sources":["DatatablesPaginateSortServerside.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- DatatablesPaginateSortServerside -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      If you're loading data already paginated and sorted from a backend, you can use the\n      <code>server-items-length</code> prop. Defining this prop will disable the built-in sorting and pagination, and you will instead need to use the available events (\n      <code>update:page</code>,\n      <code>update:sortBy</code>,\n      <code>update:options</code>, etc) to know when to request new pages from your backend. Use the\n      <code>loading</code> prop to display a progress bar while fetching data.\n    </v-list-item-subtitle>\n    <div class=\"mt-4\">\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"desserts\"\n        :options.sync=\"options\"\n        :server-items-length=\"totalDesserts\"\n        :loading=\"loading\"\n        class=\"border\"\n      ></v-data-table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DatatablesPaginateSortServerside\",\n\n  data: () => ({\n    totalDesserts: 0,\n    desserts: [],\n    loading: true,\n    options: {},\n    headers: [\n      {\n        text: \"Dessert (100g serving)\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\"\n      },\n      { text: \"Calories\", value: \"calories\" },\n      { text: \"Fat (g)\", value: \"fat\" },\n      { text: \"Carbs (g)\", value: \"carbs\" },\n      { text: \"Protein (g)\", value: \"protein\" },\n      { text: \"Iron (%)\", value: \"iron\" }\n    ]\n  }),\n  watch: {\n    options: {\n      handler() {\n        this.getDataFromApi().then(data => {\n          this.desserts = data.items;\n          this.totalDesserts = data.total;\n        });\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.getDataFromApi().then(data => {\n      this.desserts = data.items;\n      this.totalDesserts = data.total;\n    });\n  },\n  methods: {\n    getDataFromApi() {\n      this.loading = true;\n      return new Promise(resolve => {\n        const { sortBy, sortDesc, page, itemsPerPage } = this.options;\n\n        let items = this.getDesserts();\n        const total = items.length;\n\n        if (sortBy.length === 1 && sortDesc.length === 1) {\n          items = items.sort((a, b) => {\n            const sortA = a[sortBy[0]];\n            const sortB = b[sortBy[0]];\n\n            if (sortDesc[0]) {\n              if (sortA < sortB) return 1;\n              if (sortA > sortB) return -1;\n              return 0;\n            } else {\n              if (sortA < sortB) return -1;\n              if (sortA > sortB) return 1;\n              return 0;\n            }\n          });\n        }\n\n        if (itemsPerPage > 0) {\n          items = items.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n        }\n\n        setTimeout(() => {\n          this.loading = false;\n          resolve({\n            items,\n            total\n          });\n        }, 1000);\n      });\n    },\n    getDesserts() {\n      return [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0,\n          iron: \"1%\"\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3,\n          iron: \"1%\"\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0,\n          iron: \"7%\"\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n          iron: \"8%\"\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9,\n          iron: \"16%\"\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0,\n          iron: \"0%\"\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0,\n          iron: \"2%\"\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5,\n          iron: \"45%\"\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9,\n          iron: \"22%\"\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7,\n          iron: \"6%\"\n        }\n      ];\n    }\n  }\n};\n</script>"],"sourceRoot":"src/views/tables/table-data-table/table-data"}]}