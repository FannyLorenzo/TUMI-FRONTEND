{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewCustomSelectableicons.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewCustomSelectableicons.vue","mtime":1627753466731},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZmFubnkvRG9jdW1lbnRvcy9DVVJTT1MvR0VTL3R1bWlfcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvaG9tZS9mYW5ueS9Eb2N1bWVudG9zL0NVUlNPUy9HRVMvdHVtaV9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlZXZpZXdDdXN0b21TZWxlY3RhYmxlaWNvbnMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBicmV3ZXJpZXM6IFtdLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICB0cmVlOiBbXSwKICAgICAgdHlwZXM6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGl0ZW1zOiBmdW5jdGlvbiBpdGVtcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMudHlwZXMubWFwKGZ1bmN0aW9uICh0eXBlKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiB0eXBlLAogICAgICAgICAgbmFtZTogX3RoaXMuZ2V0TmFtZSh0eXBlKSwKICAgICAgICAgIGNoaWxkcmVuOiBfdGhpcy5nZXRDaGlsZHJlbih0eXBlKQogICAgICAgIH07CiAgICAgIH0pOwogICAgICByZXR1cm4gW3sKICAgICAgICBpZDogMSwKICAgICAgICBuYW1lOiAiQWxsIEJyZXdlcmllcyIsCiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuCiAgICAgIH1dOwogICAgfSwKICAgIHNob3VsZFNob3dUcmVlOiBmdW5jdGlvbiBzaG91bGRTaG93VHJlZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuYnJld2VyaWVzLmxlbmd0aCA+IDAgJiYgIXRoaXMuaXNMb2FkaW5nOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGJyZXdlcmllczogZnVuY3Rpb24gYnJld2VyaWVzKHZhbCkgewogICAgICB0aGlzLnR5cGVzID0gdmFsLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXIpIHsKICAgICAgICB2YXIgdHlwZSA9IGN1ci5icmV3ZXJ5X3R5cGU7CiAgICAgICAgaWYgKCFhY2MuaW5jbHVkZXModHlwZSkpIGFjYy5wdXNoKHR5cGUpOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIFtdKS5zb3J0KCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaDogZnVuY3Rpb24gKF9mZXRjaCkgewogICAgICBmdW5jdGlvbiBmZXRjaCgpIHsKICAgICAgICByZXR1cm4gX2ZldGNoLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIGZldGNoLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfZmV0Y2gudG9TdHJpbmcoKTsKICAgICAgfTsKCiAgICAgIHJldHVybiBmZXRjaDsKICAgIH0oZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmJyZXdlcmllcy5sZW5ndGgpIHJldHVybjsKICAgICAgcmV0dXJuIGZldGNoKCJodHRwczovL2FwaS5vcGVuYnJld2VyeWRiLm9yZy9icmV3ZXJpZXMiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpczIuYnJld2VyaWVzID0gZGF0YTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9KTsKICAgIH0pLAogICAgZ2V0Q2hpbGRyZW46IGZ1bmN0aW9uIGdldENoaWxkcmVuKHR5cGUpIHsKICAgICAgdmFyIGJyZXdlcmllcyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuYnJld2VyaWVzKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGJyZXdlcnkgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIGlmIChicmV3ZXJ5LmJyZXdlcnlfdHlwZSAhPT0gdHlwZSkgY29udGludWU7CiAgICAgICAgICBicmV3ZXJpZXMucHVzaChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGJyZXdlcnkpLCB7fSwgewogICAgICAgICAgICBuYW1lOiB0aGlzLmdldE5hbWUoYnJld2VyeS5uYW1lKQogICAgICAgICAgfSkpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICByZXR1cm4gYnJld2VyaWVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gYS5uYW1lID4gYi5uYW1lID8gMSA6IC0xOwogICAgICB9KTsKICAgIH0sCiAgICBnZXROYW1lOiBmdW5jdGlvbiBnZXROYW1lKG5hbWUpIHsKICAgICAgcmV0dXJuICIiLmNvbmNhdChuYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpKS5jb25jYXQobmFtZS5zbGljZSgxKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TreeviewCustomSelectableicons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA,eAAA;AACA,EAAA,IAAA,EAAA,+BADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAAA,GAHA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA;AACA,UAAA,EAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAFA;AAGA,UAAA,QAAA,EAAA,KAAA,CAAA,WAAA,CAAA,IAAA;AAHA,SAAA;AAAA,OAAA,CAAA;AAMA,aAAA,CACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,eAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OADA,CAAA;AAOA,KAfA;AAgBA,IAAA,cAhBA,4BAgBA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,KAAA,SAAA;AACA;AAlBA,GATA;AA8BA,EAAA,KAAA,EAAA;AACA,IAAA,SADA,qBACA,GADA,EACA;AACA,WAAA,KAAA,GAAA,GAAA,CACA,MADA,CACA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,YAAA;AAEA,YAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AAEA,eAAA,GAAA;AACA,OAPA,EAOA,EAPA,EAQA,IARA,EAAA;AASA;AAXA,GA9BA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,KADA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBACA;AAAA;;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,EAAA;AAEA,aAAA,KAAA,CAAA,yCAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,IAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,IAAA;AAAA,eAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AAAA,OAFA,EAGA,KAHA,CAGA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OAHA,CAAA;AAIA,KARA;AASA,IAAA,WATA,uBASA,IATA,EASA;AACA,UAAA,SAAA,GAAA,EAAA;;AADA,iDAGA,KAAA,SAHA;AAAA;;AAAA;AAGA,4DAAA;AAAA,cAAA,OAAA;AACA,cAAA,OAAA,CAAA,YAAA,KAAA,IAAA,EAAA;AAEA,UAAA,SAAA,CAAA,IAAA,iCACA,OADA;AAEA,YAAA,IAAA,EAAA,KAAA,OAAA,CAAA,OAAA,CAAA,IAAA;AAFA;AAIA;AAVA;AAAA;AAAA;AAAA;AAAA;;AAYA,aAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAFA,CAAA;AAGA,KAxBA;AAyBA,IAAA,OAzBA,mBAyBA,IAzBA,EAyBA;AACA,uBAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,EAAA,SAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AA3BA;AA5CA,CAAA","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- TreeviewCustomSelectableicons -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      Customize the on, off and indeterminate icons for your selectable tree.\n      Combine with other advanced functionality like API loaded items.\n    </v-list-item-subtitle>\n    <div class=\"mt-4\">\n      <v-toolbar color=\"primary\" dark flat>\n        <v-icon>mdi-silverware</v-icon>\n        <v-toolbar-title>Local hotspots</v-toolbar-title>\n      </v-toolbar>\n\n      <v-row>\n        <v-col>\n          <v-card-text>\n            <v-treeview\n              v-model=\"tree\"\n              :load-children=\"fetch\"\n              :items=\"items\"\n              selected-color=\"primary\"\n              open-on-click\n              selectable\n              return-object\n              expand-icon=\"mdi-chevron-down\"\n              on-icon=\"mdi-bookmark\"\n              off-icon=\"mdi-bookmark-outline\"\n              indeterminate-icon=\"mdi-bookmark-minus\"\n            >\n            </v-treeview>\n          </v-card-text>\n        </v-col>\n\n        <v-divider vertical></v-divider>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card-text>\n            <div\n              v-if=\"tree.length === 0\"\n              key=\"title\"\n              class=\"title font-weight-light grey--text pa-4 text-center\"\n            >\n              Select your favorite breweries\n            </div>\n\n            <v-scroll-x-transition group hide-on-leave>\n              <v-chip\n                v-for=\"(selection, i) in tree\"\n                :key=\"i\"\n                color=\"grey\"\n                dark\n                small\n                class=\"ma-1\"\n              >\n                <v-icon left small>mdi-beer</v-icon>\n                {{ selection.name }}\n              </v-chip>\n            </v-scroll-x-transition>\n          </v-card-text>\n        </v-col>\n      </v-row>\n\n      <v-divider></v-divider>\n\n      <v-card-actions>\n        <v-btn text @click=\"tree = []\"> Reset </v-btn>\n\n        <v-spacer></v-spacer>\n\n        <v-btn class=\"white--text\" color=\"green darken-1\" depressed>\n          Save\n          <v-icon right>mdi-content-save</v-icon>\n        </v-btn>\n      </v-card-actions>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TreeviewCustomSelectableicons\",\n\n  data: () => ({\n    breweries: [],\n    isLoading: false,\n    tree: [],\n    types: [],\n  }),\n  computed: {\n    items() {\n      const children = this.types.map((type) => ({\n        id: type,\n        name: this.getName(type),\n        children: this.getChildren(type),\n      }));\n\n      return [\n        {\n          id: 1,\n          name: \"All Breweries\",\n          children,\n        },\n      ];\n    },\n    shouldShowTree() {\n      return this.breweries.length > 0 && !this.isLoading;\n    },\n  },\n\n  watch: {\n    breweries(val) {\n      this.types = val\n        .reduce((acc, cur) => {\n          const type = cur.brewery_type;\n\n          if (!acc.includes(type)) acc.push(type);\n\n          return acc;\n        }, [])\n        .sort();\n    },\n  },\n\n  methods: {\n    fetch() {\n      if (this.breweries.length) return;\n\n      return fetch(\"https://api.openbrewerydb.org/breweries\")\n        .then((res) => res.json())\n        .then((data) => (this.breweries = data))\n        .catch((err) => console.log(err));\n    },\n    getChildren(type) {\n      const breweries = [];\n\n      for (const brewery of this.breweries) {\n        if (brewery.brewery_type !== type) continue;\n\n        breweries.push({\n          ...brewery,\n          name: this.getName(brewery.name),\n        });\n      }\n\n      return breweries.sort((a, b) => {\n        return a.name > b.name ? 1 : -1;\n      });\n    },\n    getName(name) {\n      return `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n    },\n  },\n};\n</script>"],"sourceRoot":"src/components/vuetifyComponents/treeview"}]}