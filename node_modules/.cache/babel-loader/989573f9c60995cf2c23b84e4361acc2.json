{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/thread-loader/dist/cjs.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-instantsearch/es/src/components/InfiniteHits.vue.js","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-instantsearch/es/src/components/InfiniteHits.vue.js","mtime":1619538972000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlU3VpdE1peGluIGFzIGUgfSBmcm9tICIuLi9taXhpbnMvc3VpdC5qcyI7CmltcG9ydCB7IGNyZWF0ZVdpZGdldE1peGluIGFzIHQgfSBmcm9tICIuLi9taXhpbnMvd2lkZ2V0LmpzIjsKaW1wb3J0IHsgY29ubmVjdEluZmluaXRlSGl0c1dpdGhJbnNpZ2h0cyBhcyBzIH0gZnJvbSAiaW5zdGFudHNlYXJjaC5qcy9lcy9jb25uZWN0b3JzIjsKZXhwb3J0IGRlZmF1bHQgewogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgdmFyIGUgPSB0aGlzLAogICAgICAgIHQgPSBlLiRjcmVhdGVFbGVtZW50LAogICAgICAgIHMgPSBlLl9zZWxmLl9jIHx8IHQ7CiAgICByZXR1cm4gZS5zdGF0ZSA/IHMoImRpdiIsIHsKICAgICAgY2xhc3M6IGUuc3VpdCgpCiAgICB9LCBbZS5zaG93UHJldmlvdXMgPyBlLl90KCJsb2FkUHJldmlvdXMiLCBbcygiYnV0dG9uIiwgewogICAgICBjbGFzczogW2Uuc3VpdCgibG9hZFByZXZpb3VzIiksIGUuc3RhdGUuaXNGaXJzdFBhZ2UgJiYgZS5zdWl0KCJsb2FkUHJldmlvdXMiLCAiZGlzYWJsZWQiKV0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgZGlzYWJsZWQ6IGUuc3RhdGUuaXNGaXJzdFBhZ2UKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICBjbGljazogZnVuY3Rpb24gY2xpY2sodCkgewogICAgICAgICAgZS5yZWZpbmVQcmV2aW91cygpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW2UuX3YoIlNob3cgcHJldmlvdXMgcmVzdWx0cyIpXSldLCB7CiAgICAgIHJlZmluZVByZXZpb3VzOiBlLnJlZmluZVByZXZpb3VzLAogICAgICBwYWdlOiBlLnN0YXRlLnJlc3VsdHMucGFnZSwKICAgICAgaXNGaXJzdFBhZ2U6IGUuc3RhdGUuaXNGaXJzdFBhZ2UKICAgIH0pIDogZS5fZSgpLCBlLl92KCIgIiksIGUuX3QoImRlZmF1bHQiLCBbcygib2wiLCB7CiAgICAgIGNsYXNzOiBlLnN1aXQoImxpc3QiKQogICAgfSwgZS5fbChlLml0ZW1zLCBmdW5jdGlvbiAodCwgaSkgewogICAgICByZXR1cm4gcygibGkiLCB7CiAgICAgICAga2V5OiB0Lm9iamVjdElELAogICAgICAgIGNsYXNzOiBlLnN1aXQoIml0ZW0iKQogICAgICB9LCBbZS5fdCgiaXRlbSIsIFtlLl92KCJvYmplY3RJRDogIiArIGUuX3ModC5vYmplY3RJRCkgKyAiLCBpbmRleDogIiArIGUuX3MoaSkpXSwgewogICAgICAgIGl0ZW06IHQsCiAgICAgICAgaW5kZXg6IGksCiAgICAgICAgaW5zaWdodHM6IGUuc3RhdGUuaW5zaWdodHMKICAgICAgfSldLCAyKTsKICAgIH0pKSwgZS5fdigiICIpLCBlLl90KCJsb2FkTW9yZSIsIFtzKCJidXR0b24iLCB7CiAgICAgIGNsYXNzOiBbZS5zdWl0KCJsb2FkTW9yZSIpLCBlLnN0YXRlLmlzTGFzdFBhZ2UgJiYgZS5zdWl0KCJsb2FkTW9yZSIsICJkaXNhYmxlZCIpXSwKICAgICAgYXR0cnM6IHsKICAgICAgICBkaXNhYmxlZDogZS5zdGF0ZS5pc0xhc3RQYWdlCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKHQpIHsKICAgICAgICAgIGUucmVmaW5lTmV4dCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW2UuX3YoIlNob3cgbW9yZSByZXN1bHRzIildKV0sIHsKICAgICAgcmVmaW5lTmV4dDogZS5yZWZpbmVOZXh0LAogICAgICByZWZpbmU6IGUucmVmaW5lTmV4dCwKICAgICAgcGFnZTogZS5zdGF0ZS5yZXN1bHRzLnBhZ2UsCiAgICAgIGlzTGFzdFBhZ2U6IGUuc3RhdGUuaXNMYXN0UGFnZQogICAgfSldLCB7CiAgICAgIGl0ZW1zOiBlLml0ZW1zLAogICAgICByZXN1bHRzOiBlLnN0YXRlLnJlc3VsdHMsCiAgICAgIGlzTGFzdFBhZ2U6IGUuc3RhdGUuaXNMYXN0UGFnZSwKICAgICAgcmVmaW5lUHJldmlvdXM6IGUucmVmaW5lUHJldmlvdXMsCiAgICAgIHJlZmluZU5leHQ6IGUucmVmaW5lTmV4dCwKICAgICAgcmVmaW5lOiBlLnJlZmluZU5leHQsCiAgICAgIGluc2lnaHRzOiBlLnN0YXRlLmluc2lnaHRzLAogICAgICBzZW5kRXZlbnQ6IGUuc3RhdGUuc2VuZEV2ZW50CiAgICB9KV0sIDIpIDogZS5fZSgpOwogIH0sCiAgc3RhdGljUmVuZGVyRm5zOiBbXSwKICBuYW1lOiAiQWlzSW5maW5pdGVIaXRzIiwKICBtaXhpbnM6IFt0KHsKICAgIGNvbm5lY3RvcjogcwogIH0pLCBlKHsKICAgIG5hbWU6ICJJbmZpbml0ZUhpdHMiCiAgfSldLAogIHByb3BzOiB7CiAgICBzaG93UHJldmlvdXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogITEKICAgIH0sCiAgICBlc2NhcGVIVE1MOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6ICEwCiAgICB9LAogICAgdHJhbnNmb3JtSXRlbXM6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KGUpIHsKICAgICAgICByZXR1cm4gZTsKICAgICAgfQogICAgfSwKICAgIGNhY2hlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogdm9pZCAwCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgd2lkZ2V0UGFyYW1zOiBmdW5jdGlvbiB3aWRnZXRQYXJhbXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgc2hvd1ByZXZpb3VzOiB0aGlzLnNob3dQcmV2aW91cywKICAgICAgICBlc2NhcGVIVE1MOiB0aGlzLmVzY2FwZUhUTUwsCiAgICAgICAgdHJhbnNmb3JtSXRlbXM6IHRoaXMudHJhbnNmb3JtSXRlbXMsCiAgICAgICAgY2FjaGU6IHRoaXMuY2FjaGUKICAgICAgfTsKICAgIH0sCiAgICBpdGVtczogZnVuY3Rpb24gaXRlbXMoKSB7CiAgICAgIHJldHVybiB0aGlzLnN0YXRlLmhpdHM7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZWZpbmVQcmV2aW91czogZnVuY3Rpb24gcmVmaW5lUHJldmlvdXMoKSB7CiAgICAgIHRoaXMuc3RhdGUuc2hvd1ByZXZpb3VzKCk7CiAgICB9LAogICAgcmVmaW5lTmV4dDogZnVuY3Rpb24gcmVmaW5lTmV4dCgpIHsKICAgICAgdGhpcy5zdGF0ZS5zaG93TW9yZSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["../../../src/components/InfiniteHits.vue"],"names":["render","name","mixins","createWidgetMixin","connector","connectInfiniteHitsWithInsights","createSuitMixin","props","showPrevious","type","Boolean","default","escapeHTML","transformItems","Function","items","cache","Object","undefined","computed","widgetParams","this","state","hits","methods","refinePrevious","refineNext","showMore"],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n\n    <slot\n      v-if=\"showPrevious\"\n      name=\"loadPrevious\"\n      :refine-previous=\"refinePrevious\"\n      :page=\"state.results.page\"\n      :is-first-page=\"state.isFirstPage\"\n    >\n      <button\n        :class=\"[suit('loadPrevious'), state.isFirstPage && suit('loadPrevious', 'disabled')]\"\n        :disabled=\"state.isFirstPage\"\n        @click=\"refinePrevious()\"\n      >Show previous results</button>\n    </slot>\n\n    <slot\n      :items=\"items\"\n      :results=\"state.results\"\n      :is-last-page=\"state.isLastPage\"\n      :refine-previous=\"refinePrevious\"\n      :refine-next=\"refineNext\"\n      :refine=\"refineNext\"\n      :insights=\"state.insights\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, index) in items\"\n          :class=\"suit('item')\"\n          :key=\"item.objectID\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"index\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ index }}</slot>\n        </li>\n      </ol>\n\n      <slot\n        name=\"loadMore\"\n        :refine-next=\"refineNext\"\n        :refine=\"refineNext\"\n        :page=\"state.results.page\"\n        :is-last-page=\"state.isLastPage\"\n      >\n        <button\n          :class=\"[suit('loadMore'), state.isLastPage && suit('loadMore', 'disabled')]\"\n          :disabled=\"state.isLastPage\"\n          @click=\"refineNext()\"\n        >Show more results</button>\n      </slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisInfiniteHits',\n  mixins: [\n    createWidgetMixin({ connector: connectInfiniteHitsWithInsights }),\n    createSuitMixin({ name: 'InfiniteHits' }),\n  ],\n  props: {\n    showPrevious: {\n      type: Boolean,\n      default: false,\n    },\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n    cache: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        showPrevious: this.showPrevious,\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n        cache: this.cache,\n      };\n    },\n    items() {\n      // Fixes InstantSearch.js connectors API: every list\n      // of things must be called `items`\n      return this.state.hits;\n    },\n  },\n  methods: {\n    refinePrevious() {\n      this.state.showPrevious();\n    },\n    refineNext() {\n      this.state.showMore();\n    },\n  },\n};\n</script>\n"]}]}