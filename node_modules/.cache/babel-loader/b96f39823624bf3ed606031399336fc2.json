{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyStyleComponents/transitions/TransitionsTodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyStyleComponents/transitions/TransitionsTodoList.vue","mtime":1627753466739},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUcmFuc2l0aW9uc1RvZG9MaXN0IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFza3M6IFt7CiAgICAgICAgZG9uZTogZmFsc2UsCiAgICAgICAgdGV4dDogJ0Zvb2JhcicKICAgICAgfSwgewogICAgICAgIGRvbmU6IGZhbHNlLAogICAgICAgIHRleHQ6ICdGaXp6YnV6eicKICAgICAgfV0sCiAgICAgIHRhc2s6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY29tcGxldGVkVGFza3M6IGZ1bmN0aW9uIGNvbXBsZXRlZFRhc2tzKCkgewogICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICByZXR1cm4gdGFzay5kb25lOwogICAgICB9KS5sZW5ndGg7CiAgICB9LAogICAgcHJvZ3Jlc3M6IGZ1bmN0aW9uIHByb2dyZXNzKCkgewogICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZWRUYXNrcyAvIHRoaXMudGFza3MubGVuZ3RoICogMTAwOwogICAgfSwKICAgIHJlbWFpbmluZ1Rhc2tzOiBmdW5jdGlvbiByZW1haW5pbmdUYXNrcygpIHsKICAgICAgcmV0dXJuIHRoaXMudGFza3MubGVuZ3RoIC0gdGhpcy5jb21wbGV0ZWRUYXNrczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgICB0aGlzLnRhc2tzLnB1c2goewogICAgICAgIGRvbmU6IGZhbHNlLAogICAgICAgIHRleHQ6IHRoaXMudGFzawogICAgICB9KTsKICAgICAgdGhpcy50YXNrID0gbnVsbDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["TransitionsTodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA;AAFA,OALA,CADA;AAWA,MAAA,IAAA,EAAA;AAXA,KAAA;AAAA,GAHA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA;AAAA,OAAA,EAAA,MAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,aAAA,KAAA,cAAA,GAAA,KAAA,KAAA,CAAA,MAAA,GAAA,GAAA;AACA,KANA;AAOA,IAAA,cAPA,4BAOA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,GAAA,KAAA,cAAA;AACA;AATA,GAhBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA;AAKA,WAAA,IAAA,GAAA,IAAA;AACA;AARA;AA5BA,CAAA","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- TransitionsTodoList -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap mt-4\">\n        Using multiple custom transitions, it is easy to bring a simple todo list to life!\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-text-field\n                v-model=\"task\"\n                label=\"What are you working on?\"\n                solo\n                @keydown.enter=\"create\"\n                >\n                <v-fade-transition v-slot:append>\n                    <v-icon\n                    v-if=\"task\"\n                    @click=\"create\"\n                    >\n                    add_circle\n                    </v-icon>\n                </v-fade-transition>\n                </v-text-field>\n\n                <h2 class=\"display-1 success--text pl-4\">\n                Tasks:&nbsp;\n                <v-fade-transition leave-absolute>\n                    <span :key=\"`tasks-${tasks.length}`\">\n                    {{ tasks.length }}\n                    </span>\n                </v-fade-transition>\n                </h2>\n\n                <v-divider class=\"mt-4\"></v-divider>\n\n                <v-row\n                class=\"my-1\"\n                align=\"center\"\n                >\n                <span class=\"mx-4 info--text font-weight-medium\">\n                    Remaining: {{ remainingTasks }}\n                </span>\n\n                <v-divider vertical></v-divider>\n\n                <span class=\"mx-4 success--text font-weight-medium\">\n                    Completed: {{ completedTasks }}\n                </span>\n\n                <v-spacer></v-spacer>\n\n                <v-progress-circular\n                    :value=\"progress\"\n                    class=\"mr-2\"\n                ></v-progress-circular>\n                </v-row>\n\n                <v-divider class=\"mb-4\"></v-divider>\n\n                <v-card v-if=\"tasks.length > 0\">\n                <v-slide-y-transition\n                    class=\"py-0\"\n                    group\n                    tag=\"v-list\"\n                >\n                    <template v-for=\"(task, i) in tasks\">\n                    <v-divider\n                        v-if=\"i !== 0\"\n                        :key=\"`${i}-divider`\"\n                    ></v-divider>\n\n                    <v-list-item :key=\"`${i}-${task.text}`\">\n                        <v-list-item-action>\n                        <v-checkbox\n                            v-model=\"task.done\"\n                            :color=\"task.done && 'grey' || 'info'\"\n                        >\n                            <template v-slot:label>\n                            <div\n                                :class=\"task.done && 'grey--text' || 'info--text'\"\n                                class=\"ml-4\"\n                                v-text=\"task.text\"\n                            ></div>\n                            </template>\n                        </v-checkbox>\n                        </v-list-item-action>\n\n                        <v-spacer></v-spacer>\n\n                        <v-scroll-x-transition>\n                        <v-icon\n                            v-if=\"task.done\"\n                            color=\"success\"\n                        >\n                            mdi-check\n                        </v-icon>\n                        </v-scroll-x-transition>\n                    </v-list-item>\n                    </template>\n                </v-slide-y-transition>\n                </v-card>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"TransitionsTodoList\",\n\n  data: () => ({\n      tasks: [\n        {\n          done: false,\n          text: 'Foobar',\n        },\n        {\n          done: false,\n          text: 'Fizzbuzz',\n        },\n      ],\n      task: null,\n  }),\n  computed: {\n      completedTasks () {\n        return this.tasks.filter(task => task.done).length\n      },\n      progress () {\n        return this.completedTasks / this.tasks.length * 100\n      },\n      remainingTasks () {\n        return this.tasks.length - this.completedTasks\n      },\n    },\n\n    methods: {\n      create () {\n        this.tasks.push({\n          done: false,\n          text: this.task,\n        })\n\n        this.task = null\n      },\n    },\n};\n</script>"],"sourceRoot":"src/components/vuetifyStyleComponents/transitions"}]}