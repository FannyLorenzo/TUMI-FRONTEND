{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/chips/ChipsCustomLists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/chips/ChipsCustomLists.vue","mtime":1627753466715},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2Zhbm55L0RvY3VtZW50b3MvQ1VSU09TL0dFUy90dW1pX3Byb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNoaXBzQ3VzdG9tTGlzdHMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpdGVtczogW3sKICAgICAgICB0ZXh0OiAnTmF0dXJlJywKICAgICAgICBpY29uOiAnbWRpLW5hdHVyZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdOaWdodGxpZmUnLAogICAgICAgIGljb246ICdtZGktZ2xhc3Mtd2luZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdOb3ZlbWJlcicsCiAgICAgICAgaWNvbjogJ21kaS1jYWxlbmRhci1yYW5nZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdQb3J0bGFuZCcsCiAgICAgICAgaWNvbjogJ21kaS1tYXAtbWFya2VyJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0Jpa2luZycsCiAgICAgICAgaWNvbjogJ21kaS1iaWtlJwogICAgICB9XSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHNlYXJjaDogJycsCiAgICAgIHNlbGVjdGVkOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhbGxTZWxlY3RlZDogZnVuY3Rpb24gYWxsU2VsZWN0ZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkLmxlbmd0aCA9PT0gdGhpcy5pdGVtcy5sZW5ndGg7CiAgICB9LAogICAgY2F0ZWdvcmllczogZnVuY3Rpb24gY2F0ZWdvcmllcygpIHsKICAgICAgdmFyIHNlYXJjaCA9IHRoaXMuc2VhcmNoLnRvTG93ZXJDYXNlKCk7CiAgICAgIGlmICghc2VhcmNoKSByZXR1cm4gdGhpcy5pdGVtczsKICAgICAgcmV0dXJuIHRoaXMuaXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgdmFyIHRleHQgPSBpdGVtLnRleHQudG9Mb3dlckNhc2UoKTsKICAgICAgICByZXR1cm4gdGV4dC5pbmRleE9mKHNlYXJjaCkgPiAtMTsKICAgICAgfSk7CiAgICB9LAogICAgc2VsZWN0aW9uczogZnVuY3Rpb24gc2VsZWN0aW9ucygpIHsKICAgICAgdmFyIHNlbGVjdGlvbnMgPSBbXTsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLnNlbGVjdGVkKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHNlbGVjdGlvbiA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgc2VsZWN0aW9ucy5wdXNoKHRoaXMuaXRlbXNbc2VsZWN0aW9uXSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzZWxlY3Rpb25zOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZCgpIHsKICAgICAgdGhpcy5zZWFyY2ggPSAnJzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zZWFyY2ggPSAnJzsKICAgICAgICBfdGhpcy5zZWxlY3RlZCA9IFtdOwogICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSwgMjAwMCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ChipsCustomLists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,IAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,IAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAjBA,CADA;AAuBA,MAAA,OAAA,EAAA,KAvBA;AAwBA,MAAA,MAAA,EAAA,EAxBA;AAyBA,MAAA,QAAA,EAAA;AAzBA,KAAA;AAAA,GAHA;AA8BA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,KAAA,QAAA,CAAA,MAAA,KAAA,KAAA,KAAA,CAAA,MAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,WAAA,EAAA;AAEA,UAAA,CAAA,MAAA,EAAA,OAAA,KAAA,KAAA;AAEA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAEA,eAAA,IAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA;AACA,OAJA,CAAA;AAKA,KAdA;AAeA,IAAA,UAfA,wBAeA;AACA,UAAA,UAAA,GAAA,EAAA;;AADA,iDAGA,KAAA,QAHA;AAAA;;AAAA;AAGA,4DAAA;AAAA,cAAA,SAAA;AACA,UAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,SAAA,CAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAOA,aAAA,UAAA;AACA;AAvBA,GA9BA;AAwDA,EAAA,KAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,MAAA,GAAA,EAAA;AACA;AAHA,GAxDA;AA8DA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AAEA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAJA,EAIA,IAJA,CAAA;AAKA;AATA;AA9DA,CAAA","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- Custom Lists -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        In this example we opt to use a customized list instead of v-autocomplete. This allows us to always display the options available while still providing the same functionality of search and selection.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-card\n                class=\"mx-auto\"\n                max-width=\"500\"\n            >\n                <v-toolbar\n                flat\n                color=\"transparent\"\n                >\n                <v-app-bar-nav-icon></v-app-bar-nav-icon>\n                <v-toolbar-title>Photo Info</v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-btn\n                    icon\n                    @click=\"$refs.search.focus()\"\n                >\n                    <v-icon>mdi-magnify</v-icon>\n                </v-btn>\n                </v-toolbar>\n\n                <v-container class=\"py-0\">\n                <v-row\n                    align=\"center\"\n                    justify=\"start\"\n                >\n                    <v-col\n                    v-for=\"(selection, i) in selections\"\n                    :key=\"selection.text\"\n                    class=\"shrink\"\n                    >\n                    <v-chip\n                        :disabled=\"loading\"\n                        close\n                        @click:close=\"selected.splice(i, 1)\"\n                    >\n                        <v-icon\n                        left\n                        v-text=\"selection.icon\"\n                        ></v-icon>\n                        {{ selection.text }}\n                    </v-chip>\n                    </v-col>\n\n                    <v-col v-if=\"!allSelected\" cols=\"12\">\n                    <v-text-field\n                        ref=\"search\"\n                        v-model=\"search\"\n                        full-width\n                        hide-details\n                        label=\"Search\"\n                        single-line\n                    ></v-text-field>\n                    </v-col>\n                </v-row>\n                </v-container>\n\n                <v-divider v-if=\"!allSelected\"></v-divider>\n\n                <v-list>\n                <template v-for=\"(item, i) in categories\">\n                    <v-list-item\n                    v-if=\"!selected.includes(i)\"\n                    :key=\"i\"\n                    :disabled=\"loading\"\n                    @click=\"selected.push(i)\"\n                    >\n                    <v-list-item-avatar>\n                        <v-icon\n                        :disabled=\"loading\"\n                        v-text=\"item.icon\"\n                        ></v-icon>\n                    </v-list-item-avatar>\n                    <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n                    </v-list-item>\n                </template>\n                </v-list>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                    :disabled=\"!selected.length\"\n                    :loading=\"loading\"\n                    color=\"purple\"\n                    text\n                    @click=\"next\"\n                >Next</v-btn>\n                </v-card-actions>\n            </v-card>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"ChipsCustomLists\",\n\n  data: () => ({\n    items: [\n        {\n          text: 'Nature',\n          icon: 'mdi-nature',\n        },\n        {\n          text: 'Nightlife',\n          icon: 'mdi-glass-wine',\n        },\n        {\n          text: 'November',\n          icon: 'mdi-calendar-range',\n        },\n        {\n          text: 'Portland',\n          icon: 'mdi-map-marker',\n        },\n        {\n          text: 'Biking',\n          icon: 'mdi-bike',\n        },\n      ],\n      loading: false,\n      search: '',\n      selected: [],\n  }),\n  computed: {\n      allSelected () {\n        return this.selected.length === this.items.length\n      },\n      categories () {\n        const search = this.search.toLowerCase()\n\n        if (!search) return this.items\n\n        return this.items.filter(item => {\n          const text = item.text.toLowerCase()\n\n          return text.indexOf(search) > -1\n        })\n      },\n      selections () {\n        const selections = []\n\n        for (const selection of this.selected) {\n          selections.push(this.items[selection])\n        }\n\n        return selections\n      },\n    },\n\n    watch: {\n      selected () {\n        this.search = ''\n      },\n    },\n\n    methods: {\n      next () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.search = ''\n          this.selected = []\n          this.loading = false\n        }, 2000)\n      },\n    },\n};\n</script>"],"sourceRoot":"src/components/vuetifyComponents/chips"}]}