{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/date-pickers/DatePickersReactMonthYearChange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/date-pickers/DatePickersReactMonthYearChange.vue","mtime":1627753466715},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGF0ZVBpY2tlcnNSZWFjdE1vbnRoWWVhckNoYW5nZSIsCgogIGRhdGE6ICgpID0+ICh7CiAgICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApLAogICAgICBwaWNrZXJEYXRlOiBudWxsLAogICAgICBub3RlczogW10sCiAgICAgIGFsbE5vdGVzOiBbCiAgICAgICAgJ1ByZXNpZGVudCBtZXQgd2l0aCBwcmltZSBtaW5pc3RlcicsCiAgICAgICAgJ05ldyBwb3dlciBwbGFudCBvcGVuZWQnLAogICAgICAgICdSb2NrZXQgbGF1bmNoIGFubm91bmNlZCcsCiAgICAgICAgJ0dsb2JhbCB3YXJtaW5nIGRpc2N1c3Npb24gY2FuY2VsbGVkJywKICAgICAgICAnQ29tcGFueSBjaGFuZ2VkIGl0cyBsb2NhdGlvbicsCiAgICAgIF0sCiAgfSksCiAgd2F0Y2g6IHsKICAgICAgcGlja2VyRGF0ZSAoKSB7CiAgICAgICAgdGhpcy5ub3RlcyA9IFsKICAgICAgICAgIHRoaXMuYWxsTm90ZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNSldLAogICAgICAgICAgdGhpcy5hbGxOb3Rlc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KV0sCiAgICAgICAgICB0aGlzLmFsbE5vdGVzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUpXSwKICAgICAgICBdLmZpbHRlcigodmFsdWUsIGluZGV4LCBzZWxmKSA9PiBzZWxmLmluZGV4T2YodmFsdWUpID09PSBpbmRleCkKICAgICAgfSwKICAgIH0sCn07Cg=="},{"version":3,"sources":["DatePickersReactMonthYearChange.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DatePickersReactMonthYearChange.vue","sourceRoot":"src/components/vuetifyComponents/date-pickers","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- DatePickersReactMonthYearChange -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n            You can watch the <code>pickerDate</code> which is the displayed month/year (depending on the picker type and active view) to perform some action when it changes.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-row class=\"pa-4\">\n                <v-col cols=\"12\" sm=\"6\" class=\"my-2 px-1\">\n                <v-date-picker\n                    ref=\"picker\"\n                    v-model=\"date\"\n                    :picker-date.sync=\"pickerDate\"\n                    full-width\n                ></v-date-picker>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" class=\"my-2 px-1\">\n                <div class=\"title\">Month news ({{ pickerDate || 'change month...' }})</div>\n                <div class=\"subheading\">Change month to see other news</div>\n                <ul class=\"ma-4\">\n                    <li v-for=\"note in notes\" :key=\"note\">{{ note }}</li>\n                </ul>\n                </v-col>\n            </v-row>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"DatePickersReactMonthYearChange\",\n\n  data: () => ({\n      date: new Date().toISOString().substr(0, 10),\n      pickerDate: null,\n      notes: [],\n      allNotes: [\n        'President met with prime minister',\n        'New power plant opened',\n        'Rocket launch announced',\n        'Global warming discussion cancelled',\n        'Company changed its location',\n      ],\n  }),\n  watch: {\n      pickerDate () {\n        this.notes = [\n          this.allNotes[Math.floor(Math.random() * 5)],\n          this.allNotes[Math.floor(Math.random() * 5)],\n          this.allNotes[Math.floor(Math.random() * 5)],\n        ].filter((value, index, self) => self.indexOf(value) === index)\n      },\n    },\n};\n</script>"]}]}