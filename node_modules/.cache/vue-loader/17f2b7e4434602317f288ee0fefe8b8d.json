{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tableros/componentes/std_ventas/graf_ventas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tableros/componentes/std_ventas/graf_ventas.vue","mtime":1627753466783},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["graf_ventas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"graf_ventas.vue","sourceRoot":"src/views/tableros/componentes/std_ventas","sourcesContent":["<template>\n  <v-card class=\"mb-7\">\n    <v-toolbar flat>\n      <v-toolbar-title>Total ventas por variedad de Arroz</v-toolbar-title>\n    </v-toolbar>\n    <v-divider></v-divider>\n    <div class=\"mt-4 pa-4\">\n      <div>\n        <apexchart\n          type=\"area\"\n          height=\"350\"\n          :options=\"chartOptions\"\n          :series=\"series\"\n        ></apexchart>\n      </div>\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\n//import { mapState, mapActions } from \"vuex\";\n//import VueApexCharts from \"vue-apexcharts\" ;\n\nexport default {\n  name: \"graf_ventas\",\n\n  data: () => ({\n    // datos\n    data: [],\n    fecha_inicio: \"\",\n    fecha_fin: \"\",\n\n    dataSet: [], // numeros finales - esto se grafica\n    dataSeries: [], // varias variedades [ [],[],[] ] - solo es totales por variedad\n\n    series: [\n      {\n        name: \"VARIEDAD A\",\n        data: [],\n      },\n      {\n        name: \"VARIEDAD B\",\n        data: [],\n      }\n      \n    ],\n\n    chartOptions: {\n      chart: {\n        type: \"area\",\n        stacked: true,\n        height: 350,\n        zoom: {\n          enabled: true,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      markers: {\n        size: 0,\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          inverseColors: false,\n          opacityFrom: 0.45,\n          opacityTo: 0.05,\n          stops: [20, 100, 100, 100],\n        },\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: \"#8e8da4\",\n          },\n          offsetX: 0,\n          formatter: function (val) {\n            return val.toLocaleString(undefined, {maximumFractionDigits:2});\n          },\n        },\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n      },\n      xaxis: {\n        type: \"datetime\",\n        tickAmount: 8,\n        min: new Date().getTime(), // cambbia con la actualización de fechas\n        max: new Date().getTime(),\n        labels: {\n          rotate: -15,\n          rotateAlways: true,\n          formatter: function (val, timestamp) {\n            return moment(new Date(timestamp)).format(\"DD MMM YYYY\");\n          },\n        },\n      },\n      title: {\n        text: \"Evolución de ventas - anual\",\n        align: \"left\",\n        offsetX: 14,\n      },\n      tooltip: {\n        shared: true,\n      },\n      theme: {mode: 'dark', palette: 'palette1'},\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        offsetX: -10,\n      },\n    },\n\n  }),\n  created() {\n    // this.refrescarIndiProduccion();\n   this.fechas_actuales();\n    this.recuperarDataset();\n  },\n  computed: {\n    // ...mapState([\"barChart\",\"series\", \"chartOptions\"]),\n  },\n\n  methods: {\n    //  ...mapActions([\"refrescarIndiProduccion\"]),\n\n    fechas_actuales() {\n      // FECHA VALIDA QUE TRANSFORMA \"2018-01-30\" A time ok, new Date(new Date(\"2018-01-30\".replace('-','/')).getTime())\n      let state = this;\n      const g = new Date();\n      let anio = g.getFullYear();\n      let mes = g.getMonth() + 1;\n      let dia = g.getDate();\n\n      this.fecha_inicio = anio - 1 + \"/\" + mes + \"/\" + dia;\n     // this.fecha_inicio = \"2021/07/17\";\n      this.fecha_fin = anio + \"/\" + mes + \"/\" + (dia+1);\n     // let fechita = new Date(this.fecha_inicio).getTime(); //this.fecha_inicio.getTime();\n\n\n      console.log(\n        \"fecha ini: \" + this.fecha_inicio + \" fecha fin: \" + this.fecha_fin\n      );\n      \n      state.chartOptions = {...state.chartOptions, ...{ \n        xaxis: {\n        type: \"datetime\",\n        tickAmount: 8,\n        min: new Date(this.fecha_inicio).getTime(),\n        max: new Date(this.fecha_fin).getTime(),\n        labels: {\n          rotate: -15,\n          rotateAlways: true,\n          formatter: function (val, timestamp) {\n            return moment(new Date(timestamp)).format(\"DD MMM YYYY\");\n          },\n        },\n      },} };\n       \n    },\n    mostrarData(data){\n      var msg = \"\";\n      console.log(\"entro a: \");\n      for(let i=0 ; i<data.size; i++){\n        msg +=\"[\";\n        for(let j=0 ; j<data[i].size; j++){\n          \n            msg +=\" \"+data[i][j];\n        \n      \n        }\n       msg +=\"], \";\n\n     } \n     console.log(\"ojo: \"+msg);\n     },\n    recuperarDataset() {\n       let state = this;  \n      let newData = [];\n      let newNames = []; \n      state.data = [];\n\n   \n      axios\n        .get(\"vent/anual/\") //vent/anual/\n        .then(function (response) {\n          state.data = response.data;    \n          console.log(\"data \" + state.data);\n\n          // VARIEDADES\n          let pas = 0;\n          Object.values(state.data).map((item) => { //mapeo cada DIA\n            Object.values(item).map((ele) => { //variedades de cada DIA\n              if (newNames.includes(ele.VARIEDAD)) {\n                console.log(\"repetido\");\n              } else {\n                newNames[pas] = ele.VARIEDAD;\n                pas++;\n              }\n            });\n          });\n\n          console.log(\"variedades \" + newNames);\n\n          // DATASERIES\n         newData = newNames.map((vari) => {\n           const container = {};\n           container['name'] = vari;\n           let cadena=[];          \n           let incidencia = 0;\n           const g = new Date();\n            let anio = g.getFullYear();\n            let mes = g.getMonth() + 1;\n            let dia = g.getDate();\n            let fechis = anio - 1 + \"/\" + mes + \"/\" + dia;\n\n          let fechita = new Date(fechis).getTime(); //this.fecha_inicio.getTime();\n            console.log(\"variedad  fechita: \"+vari+\" - \"+fechita);\n           Object.values(state.data).map((item) => {\n              Object.values(item).map((ele) => {\n                     \n                    if(ele.VARIEDAD===vari){\n                      fechita = new Date(ele.FECHA).getTime()+86400000;              \n                      cadena.push([fechita, ele.TOTAL]);\n                      console.log(\"[\"+fechita+\", \"+ele.TOTAL+\"]\" + incidencia); \n                      incidencia++;\n                    }  \n                    /*           \n\n                    if(incidencia<=0){ // si no se encuentra en la lista, el envase requerido, 0\n                      cadena.push([fechita, 0]); \n                      console.log(\"[\"+fechita+\", \"+0+\"]\"); \n                    }*/\n                  fechita = fechita + 86400000; //se aumenta un dia\n              }); //fin items data\n            }); //fin data\n              \n            if(cadena!=null)\n            container['data'] = cadena; //THIS\n\n          return container;\n          }); //fin variedades\n\n          console.log(\"newdata: \"+newData);\n          // ACTUALZACIÓN DE VALORES A GRÁFICA\n       // state.chartOptions = {...state.chartOptions, ...{ xaxis: {categories: newCategories,}} };\n        state.series =  Object.values(newData).map(item => item);\n                  \n         \n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n};\n</script>\n\n\n"]}]}