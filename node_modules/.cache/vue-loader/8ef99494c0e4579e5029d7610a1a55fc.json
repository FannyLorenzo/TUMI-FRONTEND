{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/skeleton-loaders/SkeletonLoadersImplementationMethods.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/skeleton-loaders/SkeletonLoadersImplementationMethods.vue","mtime":1627753466727},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2tlbGV0b25Mb2FkZXJzSW1wbGVtZW50YXRpb25NZXRob2RzIiwKCiAgZGF0YTogKCkgPT4gKHsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgdHJhbnNpdGlvbjogJ3NjYWxlLXRyYW5zaXRpb24nLAogICAgICB0cmFuc2l0aW9uczogWwogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdOb25lJywKICAgICAgICAgIHZhbHVlOiB1bmRlZmluZWQsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXh0OiAnRmFkZSBUcmFuc2l0aW9uJywKICAgICAgICAgIHZhbHVlOiAnZmFkZS10cmFuc2l0aW9uJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdTY2FsZSBUcmFuc2l0aW9uJywKICAgICAgICAgIHZhbHVlOiAnc2NhbGUtdHJhbnNpdGlvbicsCiAgICAgICAgfSwKICAgICAgXSwKICB9KSwKfTsK"},{"version":3,"sources":["SkeletonLoadersImplementationMethods.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SkeletonLoadersImplementationMethods.vue","sourceRoot":"src/components/vuetifyComponents/skeleton-loaders","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- SkeletonLoadersImplementationMethods -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        There are 2 ways that you can utilize the <code>v-skeleton-component</code>. The default slot or a v-if conditional. The built in slot is the most convenient and easiest to use, but generates an extra div once rendered. If the extra div is an issue in your setup, you can utilize a v-if conditional with a Vuetify transition component or a custom one.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-container class=\"grey\">\n                <div class=\"text-center d-flex justify-center align-center mb-12 flex-wrap\">\n                <v-btn\n                    class=\"mx-12 my-4\"\n                    @click=\"loading = !loading\"\n                >\n                    Toggle\n                </v-btn>\n\n                <v-select\n                    v-model=\"transition\"\n                    label=\"Transition\"\n                    hide-details\n                    :items=\"transitions\"\n                    style=\"max-width: 200px;\"\n                ></v-select>\n                </div>\n\n                <v-row justify=\"center\">\n                <v-col\n                    class=\"text-center\"\n                    cols=\"12\"\n                >\n                    <div class=\"headline\">Default Slot</div>\n                </v-col>\n\n                <v-col\n                    class=\"mb-12\"\n                    cols=\"12\"\n                    md=\"4\"\n                >\n                    <v-skeleton-loader\n                    :loading=\"loading\"\n                    :transition=\"transition\"\n                    height=\"94\"\n                    type=\"list-item-two-line\"\n                    >\n                    <v-card>\n                        <v-card-title>Title</v-card-title>\n                        <v-card-text>Card Text</v-card-text>\n                    </v-card>\n                    </v-skeleton-loader>\n                </v-col>\n\n                <v-col\n                    class=\"text-center\"\n                    cols=\"12\"\n                >\n                    <div class=\"headline\">\n                    If conditional<br>w/Transition Element\n                    </div>\n                </v-col>\n\n                <v-col\n                    cols=\"12\"\n                    md=\"4\"\n                >\n                    <component\n                    :is=\"transition !== 'None' ? `v-${transition}` : 'div'\"\n                    hide-on-leave\n                    >\n                    <v-skeleton-loader\n                        v-if=\"loading\"\n                        height=\"94\"\n                        type=\"list-item-two-line\"\n                    >\n                    </v-skeleton-loader>\n\n                    <v-card\n                        v-else\n                    >\n                        <v-card-title>Title</v-card-title>\n                        <v-card-text>Card Text</v-card-text>\n                    </v-card>\n                    </component>\n                </v-col>\n                </v-row>\n            </v-container>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"SkeletonLoadersImplementationMethods\",\n\n  data: () => ({\n      loading: true,\n      transition: 'scale-transition',\n      transitions: [\n        {\n          text: 'None',\n          value: undefined,\n        },\n        {\n          text: 'Fade Transition',\n          value: 'fade-transition',\n        },\n        {\n          text: 'Scale Transition',\n          value: 'scale-transition',\n        },\n      ],\n  }),\n};\n</script>"]}]}