{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/menus/MenusCustomTransitions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/menus/MenusCustomTransitions.vue","mtime":1627753466723},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWVudXNDdXN0b21UcmFuc2l0aW9ucyIsCgogIGRhdGE6ICgpID0+ICh7CiAgICAgIGl0ZW1zOiBbCiAgICAgICAgeyB0aXRsZTogJ0NsaWNrIE1lJyB9LAogICAgICAgIHsgdGl0bGU6ICdDbGljayBNZScgfSwKICAgICAgICB7IHRpdGxlOiAnQ2xpY2sgTWUnIH0sCiAgICAgICAgeyB0aXRsZTogJ0NsaWNrIE1lIDInIH0sCiAgICAgIF0sCiAgfSkKfTsK"},{"version":3,"sources":["MenusCustomTransitions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MenusCustomTransitions.vue","sourceRoot":"src/components/vuetifyComponents/menus","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- MenusCustomTransitions -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        Vuetify comes with 3 standard transitions, <span class=\"grey--text text--darken-4 font-weight-bold\">scale</span>, <span class=\"grey--text text--darken-4 font-weight-bold\">slide-x</span> and <span class=\"grey--text text--darken-4 font-weight-bold\">slide-y</span>. You can also create your own and pass it as the transition argument. For an example of how the stock transitions are constructed, visit here.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-row justify=\"space-around\">\n                <v-menu\n                bottom\n                origin=\"center center\"\n                transition=\"scale-transition\"\n                >\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                    color=\"primary\"\n                    dark\n                    v-on=\"on\"\n                    >\n                    Scale Transition\n                    </v-btn>\n                </template>\n\n                <v-list>\n                    <v-list-item\n                    v-for=\"(item, i) in items\"\n                    :key=\"i\"\n                    @click.stop\n                    >\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                    </v-list-item>\n                </v-list>\n                </v-menu>\n\n                <v-menu\n                transition=\"slide-x-transition\"\n                bottom\n                right\n                >\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                    class=\"deep-orange\"\n                    color=\"primary\"\n                    dark\n                    v-on=\"on\"\n                    >\n                    Slide X Transition\n                    </v-btn>\n                </template>\n\n                <v-list>\n                    <v-list-item\n                    v-for=\"(item, i) in items\"\n                    :key=\"i\"\n                    @click.stop\n                    >\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                    </v-list-item>\n                </v-list>\n                </v-menu>\n\n                <v-menu\n                transition=\"slide-y-transition\"\n                bottom\n                >\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                    class=\"purple\"\n                    color=\"primary\"\n                    dark\n                    v-on=\"on\"\n                    >\n                    Slide Y Transition\n                    </v-btn>\n                </template>\n                <v-list>\n                    <v-list-item\n                    v-for=\"(item, i) in items\"\n                    :key=\"i\"\n                    @click.stop\n                    >\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                    </v-list-item>\n                </v-list>\n                </v-menu>\n            </v-row>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"MenusCustomTransitions\",\n\n  data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n  })\n};\n</script>"]}]}