{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tables/table-data-table/table-data/DatatablesCustomizingDefaultRows.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/tables/table-data-table/table-data/DatatablesCustomizingDefaultRows.vue","mtime":1627753466783},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGF0YXRhYmxlc0N1c3RvbWl6aW5nRGVmYXVsdFJvd3MiLAoKICBkYXRhOiAoKSA9PiAoewogICAgaGVhZGVyczogWwogICAgICB7CiAgICAgICAgdGV4dDogIkRlc3NlcnQgKDEwMGcgc2VydmluZykiLAogICAgICAgIGFsaWduOiAic3RhcnQiLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB2YWx1ZTogIm5hbWUiCiAgICAgIH0sCiAgICAgIHsgdGV4dDogIkNhbG9yaWVzIiwgdmFsdWU6ICJjYWxvcmllcyIgfSwKICAgICAgeyB0ZXh0OiAiRmF0IChnKSIsIHZhbHVlOiAiZmF0IiB9LAogICAgICB7IHRleHQ6ICJDYXJicyAoZykiLCB2YWx1ZTogImNhcmJzIiB9LAogICAgICB7IHRleHQ6ICJQcm90ZWluIChnKSIsIHZhbHVlOiAicHJvdGVpbiIgfSwKICAgICAgeyB0ZXh0OiAiSXJvbiAoJSkiLCB2YWx1ZTogImlyb24iIH0KICAgIF0sCiAgICBkZXNzZXJ0czogWwogICAgICB7CiAgICAgICAgbmFtZTogIkZyb3plbiBZb2d1cnQiLAogICAgICAgIGNhbG9yaWVzOiAxNTksCiAgICAgICAgZmF0OiA2LjAsCiAgICAgICAgY2FyYnM6IDI0LAogICAgICAgIHByb3RlaW46IDQuMCwKICAgICAgICBpcm9uOiAiMSUiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBuYW1lOiAiSWNlIGNyZWFtIHNhbmR3aWNoIiwKICAgICAgICBjYWxvcmllczogMjM3LAogICAgICAgIGZhdDogOS4wLAogICAgICAgIGNhcmJzOiAzNywKICAgICAgICBwcm90ZWluOiA0LjMsCiAgICAgICAgaXJvbjogIjElIgogICAgICB9LAogICAgICB7CiAgICAgICAgbmFtZTogIkVjbGFpciIsCiAgICAgICAgY2Fsb3JpZXM6IDI2MiwKICAgICAgICBmYXQ6IDE2LjAsCiAgICAgICAgY2FyYnM6IDIzLAogICAgICAgIHByb3RlaW46IDYuMCwKICAgICAgICBpcm9uOiAiNyUiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBuYW1lOiAiQ3VwY2FrZSIsCiAgICAgICAgY2Fsb3JpZXM6IDMwNSwKICAgICAgICBmYXQ6IDMuNywKICAgICAgICBjYXJiczogNjcsCiAgICAgICAgcHJvdGVpbjogNC4zLAogICAgICAgIGlyb246ICI4JSIKICAgICAgfSwKICAgICAgewogICAgICAgIG5hbWU6ICJHaW5nZXJicmVhZCIsCiAgICAgICAgY2Fsb3JpZXM6IDM1NiwKICAgICAgICBmYXQ6IDE2LjAsCiAgICAgICAgY2FyYnM6IDQ5LAogICAgICAgIHByb3RlaW46IDMuOSwKICAgICAgICBpcm9uOiAiMTYlIgogICAgICB9LAogICAgICB7CiAgICAgICAgbmFtZTogIkplbGx5IGJlYW4iLAogICAgICAgIGNhbG9yaWVzOiAzNzUsCiAgICAgICAgZmF0OiAwLjAsCiAgICAgICAgY2FyYnM6IDk0LAogICAgICAgIHByb3RlaW46IDAuMCwKICAgICAgICBpcm9uOiAiMCUiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBuYW1lOiAiTG9sbGlwb3AiLAogICAgICAgIGNhbG9yaWVzOiAzOTIsCiAgICAgICAgZmF0OiAwLjIsCiAgICAgICAgY2FyYnM6IDk4LAogICAgICAgIHByb3RlaW46IDAsCiAgICAgICAgaXJvbjogIjIlIgogICAgICB9LAogICAgICB7CiAgICAgICAgbmFtZTogIkhvbmV5Y29tYiIsCiAgICAgICAgY2Fsb3JpZXM6IDQwOCwKICAgICAgICBmYXQ6IDMuMiwKICAgICAgICBjYXJiczogODcsCiAgICAgICAgcHJvdGVpbjogNi41LAogICAgICAgIGlyb246ICI0NSUiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICBuYW1lOiAiRG9udXQiLAogICAgICAgIGNhbG9yaWVzOiA0NTIsCiAgICAgICAgZmF0OiAyNS4wLAogICAgICAgIGNhcmJzOiA1MSwKICAgICAgICBwcm90ZWluOiA0LjksCiAgICAgICAgaXJvbjogIjIyJSIKICAgICAgfSwKICAgICAgewogICAgICAgIG5hbWU6ICJLaXRLYXQiLAogICAgICAgIGNhbG9yaWVzOiA1MTgsCiAgICAgICAgZmF0OiAyNi4wLAogICAgICAgIGNhcmJzOiA2NSwKICAgICAgICBwcm90ZWluOiA3LAogICAgICAgIGlyb246ICI2JSIKICAgICAgfQogICAgXQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGdldENvbG9yKGNhbG9yaWVzKSB7CiAgICAgIGlmIChjYWxvcmllcyA+IDQwMCkgcmV0dXJuICJlcnJvciI7CiAgICAgIGVsc2UgaWYgKGNhbG9yaWVzID4gMjAwKSByZXR1cm4gIndhcm5pbmciOwogICAgICBlbHNlIHJldHVybiAic3VjY2VzcyI7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["DatatablesCustomizingDefaultRows.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DatatablesCustomizingDefaultRows.vue","sourceRoot":"src/views/tables/table-data-table/table-data","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- DatatablesCustomizingDefaultRows -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      You can use the dynamic slots\n      <code>item.name</code> to customize only certain columns.\n      <code>name</code> is the name of the\n      <code>value</code> property in the corresponding header item sent to\n      <code>headers</code>. So to customize the calories column we're using the\n      <code>item.calories</code> slot.\n    </v-list-item-subtitle>\n    <div class=\"mt-4\">\n      <v-data-table :headers=\"headers\" :items=\"desserts\" class=\"border\">\n        <template v-slot:item.calories=\"{ item }\">\n          <v-chip :color=\"getColor(item.calories)\" dark>{{ item.calories }}</v-chip>\n        </template>\n      </v-data-table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DatatablesCustomizingDefaultRows\",\n\n  data: () => ({\n    headers: [\n      {\n        text: \"Dessert (100g serving)\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\"\n      },\n      { text: \"Calories\", value: \"calories\" },\n      { text: \"Fat (g)\", value: \"fat\" },\n      { text: \"Carbs (g)\", value: \"carbs\" },\n      { text: \"Protein (g)\", value: \"protein\" },\n      { text: \"Iron (%)\", value: \"iron\" }\n    ],\n    desserts: [\n      {\n        name: \"Frozen Yogurt\",\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        iron: \"1%\"\n      },\n      {\n        name: \"Ice cream sandwich\",\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        iron: \"1%\"\n      },\n      {\n        name: \"Eclair\",\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        iron: \"7%\"\n      },\n      {\n        name: \"Cupcake\",\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        iron: \"8%\"\n      },\n      {\n        name: \"Gingerbread\",\n        calories: 356,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9,\n        iron: \"16%\"\n      },\n      {\n        name: \"Jelly bean\",\n        calories: 375,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0,\n        iron: \"0%\"\n      },\n      {\n        name: \"Lollipop\",\n        calories: 392,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0,\n        iron: \"2%\"\n      },\n      {\n        name: \"Honeycomb\",\n        calories: 408,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5,\n        iron: \"45%\"\n      },\n      {\n        name: \"Donut\",\n        calories: 452,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9,\n        iron: \"22%\"\n      },\n      {\n        name: \"KitKat\",\n        calories: 518,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7,\n        iron: \"6%\"\n      }\n    ]\n  }),\n  methods: {\n    getColor(calories) {\n      if (calories > 400) return \"error\";\n      else if (calories > 200) return \"warning\";\n      else return \"success\";\n    }\n  }\n};\n</script>"]}]}