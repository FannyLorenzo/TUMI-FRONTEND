{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/grids/GridsRowColumnBreakpoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/grids/GridsRowColumnBreakpoints.vue","mtime":1627753466719},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR3JpZHNSb3dDb2x1bW5CcmVha3BvaW50cyIsCgogIGRhdGE6ICgpID0+ICh7CiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgICAgY29scyAoKSB7CiAgICAgICAgY29uc3QgeyBsZywgc20gfSA9IHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludAogICAgICAgIHJldHVybiBsZyA/IFszLCA5XSA6IHNtID8gWzksIDNdIDogWzYsIDZdCiAgICAgIH0sCiAgICB9LAp9Owo="},{"version":3,"sources":["GridsRowColumnBreakpoints.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GridsRowColumnBreakpoints.vue","sourceRoot":"src/components/vuetifyComponents/grids","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- GridsRowColumnBreakpoints -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n           Dynamically change your layout based upon resolution. <span class=\"grey--text text--darken-4 font-weight-bold\">(resize your screen and watch the top <code>row</code> layout change on sm, md, and lg breakpoints)</span>\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-container class=\"grey lighten-5\">\n                <v-row\n                class=\"mb-6\"\n                no-gutters\n                >\n                <v-col\n                    v-for=\"n in 2\"\n                    :key=\"n\"\n                    :lg=\"cols[n - 1]\"\n                    :md=\"6\"\n                    :sm=\"cols[n - 1]\"\n                >\n                    <v-card\n                    class=\"pa-2\"\n                    outlined\n                    tile\n                    >\n                    col-{{ cols[n - 1] }}\n                    </v-card>\n                </v-col>\n                </v-row>\n                <v-row no-gutters>\n                <v-col\n                    v-for=\"n in 3\"\n                    :key=\"n\"\n                    cols=\"sm\"\n                >\n                    <v-card\n                    class=\"pa-2\"\n                    outlined\n                    tile\n                    >\n                    col\n                    </v-card>\n                </v-col>\n                </v-row>\n            </v-container>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"GridsRowColumnBreakpoints\",\n\n  data: () => ({\n  }),\n  computed: {\n      cols () {\n        const { lg, sm } = this.$vuetify.breakpoint\n        return lg ? [3, 9] : sm ? [9, 3] : [6, 6]\n      },\n    },\n};\n</script>"]}]}