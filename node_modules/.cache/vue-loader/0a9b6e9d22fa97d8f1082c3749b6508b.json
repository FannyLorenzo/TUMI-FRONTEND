{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/buttons/ButtonLoaders.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/buttons/ButtonLoaders.vue","mtime":1627753466711},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQnV0dG9uTG9hZGVycyIsCgogIGRhdGE6ICgpID0+ICh7CiAgICAgICAgbG9hZGVyOiBudWxsLAogICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgIGxvYWRpbmcyOiBmYWxzZSwKICAgICAgICBsb2FkaW5nMzogZmFsc2UsCiAgICAgICAgbG9hZGluZzQ6IGZhbHNlLAogICAgICAgIGxvYWRpbmc1OiBmYWxzZSwKICB9KSwKICB3YXRjaDogewogICAgICBsb2FkZXIgKCkgewogICAgICAgIGNvbnN0IGwgPSB0aGlzLmxvYWRlcgogICAgICAgIHRoaXNbbF0gPSAhdGhpc1tsXQoKICAgICAgICBzZXRUaW1lb3V0KCgpID0+ICh0aGlzW2xdID0gZmFsc2UpLCAzMDAwKQoKICAgICAgICB0aGlzLmxvYWRlciA9IG51bGwKICAgICAgfSwKICAgIH0sCn07Cg=="},{"version":3,"sources":["ButtonLoaders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"ButtonLoaders.vue","sourceRoot":"src/components/vuetifyComponents/buttons","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- Loaders -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        Using the loading prop, you can notify a user that there is processing taking place. The default behavior is to use a v-progress-circular component but this can be customized.\n        </v-list-item-subtitle>\n        <div class=\"mt-4 text-center\">\n            <v-btn\n                class=\"ma-2\"\n                :loading=\"loading\"\n                :disabled=\"loading\"\n                color=\"success\"\n                @click=\"loader = 'loading'\"\n                >\n                Accept Terms\n                </v-btn>\n\n                <v-btn\n                :loading=\"loading3\"\n                :disabled=\"loading3\"\n                color=\"info\"\n                class=\"ma-2 white--text\"\n                @click=\"loader = 'loading3'\"\n                >\n                Upload\n                <v-icon right dark>mdi-cloud-upload</v-icon>\n                </v-btn>\n\n                <v-btn\n                class=\"ma-2\"\n                :loading=\"loading2\"\n                :disabled=\"loading2\"\n                color=\"warning\"\n                @click=\"loader = 'loading2'\"\n                >\n                Custom Loader\n                <template v-slot:loader>\n                    <span>Loading...</span>\n                </template>\n                </v-btn>\n\n                <v-btn\n                class=\"ma-2\"\n                :loading=\"loading4\"\n                :disabled=\"loading4\"\n                color=\"info\"\n                @click=\"loader = 'loading4'\"\n                >\n                Icon Loader\n                <template v-slot:loader>\n                    <span class=\"custom-loader\">\n                    <v-icon light>mdi-reload</v-icon>\n                    </span>\n                </template>\n                </v-btn>\n\n                <v-btn\n                :loading=\"loading5\"\n                :disabled=\"loading5\"\n                color=\"error\"\n                class=\"ma-2 white--text\"\n                fab\n                @click=\"loader = 'loading5'\"\n                >\n                <v-icon dark>mdi-cloud-upload</v-icon>\n                </v-btn>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"ButtonLoaders\",\n\n  data: () => ({\n        loader: null,\n        loading: false,\n        loading2: false,\n        loading3: false,\n        loading4: false,\n        loading5: false,\n  }),\n  watch: {\n      loader () {\n        const l = this.loader\n        this[l] = !this[l]\n\n        setTimeout(() => (this[l] = false), 3000)\n\n        this.loader = null\n      },\n    },\n};\n</script>"]}]}