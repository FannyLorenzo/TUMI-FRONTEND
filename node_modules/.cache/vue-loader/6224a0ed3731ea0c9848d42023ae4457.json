{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/email/EmailList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/views/apps/email/EmailList.vue","mtime":1627753466763},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IHsgZ2V0TWFpbEJ5VHlwZSB9IGZyb20gIkAvdmlld3MvYXBwcy9lbWFpbC9hcGkvbWFpbCI7CmltcG9ydCB7IGdldE1haWxCeVRhZyB9IGZyb20gIkAvdmlld3MvYXBwcy9lbWFpbC9hcGkvbWFpbCI7ClZ1ZS5maWx0ZXIoInVwcGVyY2FzZSIsIGZ1bmN0aW9uKHZhbHVlKSB7CiAgcmV0dXJuIHZhbHVlLnRvVXBwZXJDYXNlKCk7Cn0pOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkVtYWlsTGlzdCIsCiAgcHJvcHM6IHsKICAgIG1haWxUeXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImFsbCIKICAgIH0sCiAgICBtYWlsVGFnOiB7CiAgICAgIHRhZzogU3RyaW5nCiAgICB9LAogICAgaXNTZWxlY3RlZGE6IHsKICAgICAgdHlwZTogQm9vbGVhbgogICAgfQogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIHNlbGVjdGVkOiBbMF0sCiAgICBpc3RvZ2dsZTogdHJ1ZSwKICAgIGlzU2VsZWN0ZWQ6IGZhbHNlCiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgIG1haWxzKCkgewogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLm1haWxUeXBlKSB7CiAgICAgICAgcmV0dXJuIGdldE1haWxCeVR5cGUodGhpcy4kcm91dGUucGFyYW1zLm1haWxUeXBlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0TWFpbEJ5VGFnKHRoaXMuJHJvdXRlLnBhcmFtcy5tYWlsVGFnKTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgRW1haWxEZXRhaWw6ICgpID0+IGltcG9ydCgiQC92aWV3cy9hcHBzL2VtYWlsL0VtYWlsRGV0YWlsIikKICB9LAogIG1ldGhvZHM6IHsKICAgIGNvbXB1dGVNYWlsUGF0aChpZCkgewogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLm1haWxUeXBlKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHBhdGg6ICIvYXBwcy9lbWFpbC8iICsgdGhpcy4kcm91dGUucGFyYW1zLm1haWxUeXBlICsgIi8wLyIgKyBpZAogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHBhdGg6ICIvYXBwcy9lbWFpbC8iICsgIjAvIiArIHRoaXMuJHJvdXRlLnBhcmFtcy5tYWlsVGFnICsgIi8wLyIgKyBpZAogICAgICAgIH07CiAgICAgIH0KICAgIH0sCgogICAgdG9nZ2xlU2lkZWJhcigpIHsKICAgICAgdGhpcy4kZW1pdCgidG9nZ2xlcyIpOwogICAgfSwKICAgIHRvZ2dsZURldGFpbCgpIHsKICAgICAgdGhpcy5pc3RvZ2dsZSA9ICF0aGlzLmlzdG9nZ2xlOwogICAgICB0aGlzLmlzU2VsZWN0ZWQgPSB0cnVlOwogICAgfSwKCiAgICBmb3JtYXREYXRlKHMpIHsKICAgICAgLy9sZXQgb3B0aW9ucyA9IHsgd2Vla2RheTogJ2xvbmcnLCB5ZWFyOiAnbnVtZXJpYycsIG1vbnRoOiAnbG9uZycsIGRheTogJ251bWVyaWMnIH07CiAgICAgIHZhciBtb250aHMgPSBbCiAgICAgICAgIkphbnVhcnkiLAogICAgICAgICJGZWJydWFyeSIsCiAgICAgICAgIk1hcmNoIiwKICAgICAgICAiQXByaWwiLAogICAgICAgICJNYXkiLAogICAgICAgICJKdW5lIiwKICAgICAgICAiSnVseSIsCiAgICAgICAgIkF1Z3VzdCIsCiAgICAgICAgIlNlcHRlbWJlciIsCiAgICAgICAgIk9jdG9iZXIiLAogICAgICAgICJOb3ZlbWJlciIsCiAgICAgICAgIkRlY2VtYmVyIgogICAgICBdOwogICAgICB2YXIgZCA9IG5ldyBEYXRlKHMpOwogICAgICByZXR1cm4gbW9udGhzW2QuZ2V0TW9udGgoKV0gKyAiICIgKyBkLmdldERheSgpOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJHJvb3QuJG9uKCJjbGlja2VkU29tZXRoaW5nIiwgKCkgPT4gewogICAgICB0aGlzLmlzU2VsZWN0ZWQgPSBmYWxzZTsKICAgIH0pOwogIH0KfTsK"},{"version":3,"sources":["EmailList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EmailList.vue","sourceRoot":"src/views/apps/email","sourcesContent":["<template>\n  <v-container fluid class=\"pt-0\">\n    <v-row no-guuters>\n      <v-col cols=\"12\" md=\"4\" class=\"border-right px-0\">\n        <!-- Emails -->\n        <v-toolbar dense class=\"elevation-0\">\n          <v-app-bar-nav-icon @click=\"toggleSidebar()\" class=\"d-block d-md-none\"></v-app-bar-nav-icon>\n          <span\n            class=\"ml-2\"\n            v-if=\"$route.params.mailType\"\n          >{{this.$route.params.mailType | uppercase}}</span>\n          <span class=\"ml-2\" v-if=\"$route.params.mailTag\">{{this.$route.params.mailTag | uppercase}}</span>\n        </v-toolbar>\n        <v-divider class=\"mt-2\"></v-divider>\n        <!-- Listing of emails -->\n        <div v-bar>\n          <v-list two-line class=\"email-list\">\n            <template v-for=\"(item, index) in mails\">\n              <v-list-item\n                ripple\n                :key=\"index\"\n                :to=\"computeMailPath(item.uuid)\"\n                @click=\"toggleDetail()\"\n              >\n                <v-list-item-action class=\"mr-3\">\n                  <v-checkbox></v-checkbox>\n                </v-list-item-action>\n                <v-list-item-avatar class=\"mr-3\">\n                  <img :src=\"require('@/assets/images/users' + item.from.avatar)\" />\n                </v-list-item-avatar>\n                <v-list-item-content>\n                  <v-list-item-title>{{ item.from.name }}</v-list-item-title>\n                  <v-list-item-subtitle>{{ item.title }}</v-list-item-subtitle>\n                </v-list-item-content>\n                <v-list-item-action>\n                  <v-list-item-action-text>{{ formatDate(item.created_at) }}</v-list-item-action-text>\n                  <v-icon color=\"warning\" v-if=\"item.type == 'starred'\">mdi-star</v-icon>\n                  <v-icon color=\"gray darken-2\" v-else>mdi-star-outline</v-icon>\n                </v-list-item-action>\n              </v-list-item>\n              <v-divider :key=\"'divider' + index\"></v-divider>\n            </template>\n          </v-list>\n        </div>\n      </v-col>\n      <!-- Email Detail -->\n      <v-col\n        cols=\"12\"\n        md=\"8\"\n        class=\"pa-0 email-detail\"\n        :class=\"[ istoggle ? 'close-detail' : 'show-detail']\"\n      >\n        <EmailDetail @togglesdetail=\"toggleDetail\" :isSelected=\"isSelected\"></EmailDetail>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { getMailByType } from \"@/views/apps/email/api/mail\";\nimport { getMailByTag } from \"@/views/apps/email/api/mail\";\nVue.filter(\"uppercase\", function(value) {\n  return value.toUpperCase();\n});\nexport default {\n  name: \"EmailList\",\n  props: {\n    mailType: {\n      type: String,\n      default: \"all\"\n    },\n    mailTag: {\n      tag: String\n    },\n    isSelecteda: {\n      type: Boolean\n    }\n  },\n  data: () => ({\n    selected: [0],\n    istoggle: true,\n    isSelected: false\n  }),\n  computed: {\n    mails() {\n      if (this.$route.params.mailType) {\n        return getMailByType(this.$route.params.mailType);\n      } else {\n        return getMailByTag(this.$route.params.mailTag);\n      }\n    }\n  },\n  components: {\n    EmailDetail: () => import(\"@/views/apps/email/EmailDetail\")\n  },\n  methods: {\n    computeMailPath(id) {\n      if (this.$route.params.mailType) {\n        return {\n          path: \"/apps/email/\" + this.$route.params.mailType + \"/0/\" + id\n        };\n      } else {\n        return {\n          path: \"/apps/email/\" + \"0/\" + this.$route.params.mailTag + \"/0/\" + id\n        };\n      }\n    },\n\n    toggleSidebar() {\n      this.$emit(\"toggles\");\n    },\n    toggleDetail() {\n      this.istoggle = !this.istoggle;\n      this.isSelected = true;\n    },\n\n    formatDate(s) {\n      //let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      var months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      var d = new Date(s);\n      return months[d.getMonth()] + \" \" + d.getDay();\n    }\n  },\n  mounted() {\n    this.$root.$on(\"clickedSomething\", () => {\n      this.isSelected = false;\n    });\n  }\n};\n</script>\n"]}]}