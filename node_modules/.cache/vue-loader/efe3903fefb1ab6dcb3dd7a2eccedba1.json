{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/autocompletes/AutocompletesAsynchronousItems.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/autocompletes/AutocompletesAsynchronousItems.vue","mtime":1627753466707},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXV0b2NvbXBsZXRlc0FzeW5jaHJvbm91c0l0ZW1zIiwKCiAgZGF0YTogKCkgPT4gKHsKICAgIGxvYWRpbmc6IGZhbHNlLAogICAgaXRlbXM6IFtdLAogICAgc2VhcmNoOiBudWxsLAogICAgc2VsZWN0OiBudWxsLAogICAgc3RhdGVzOiBbCiAgICAgICJBbGFiYW1hIiwKICAgICAgIkFsYXNrYSIsCiAgICAgICJBbWVyaWNhbiBTYW1vYSIsCiAgICAgICJBcml6b25hIiwKICAgICAgIkFya2Fuc2FzIiwKICAgICAgIkNhbGlmb3JuaWEiLAogICAgICAiQ29sb3JhZG8iLAogICAgICAiQ29ubmVjdGljdXQiLAogICAgICAiRGVsYXdhcmUiLAogICAgICAiRGlzdHJpY3Qgb2YgQ29sdW1iaWEiLAogICAgICAiRmVkZXJhdGVkIFN0YXRlcyBvZiBNaWNyb25lc2lhIiwKICAgICAgIkZsb3JpZGEiLAogICAgICAiR2VvcmdpYSIsCiAgICAgICJHdWFtIiwKICAgICAgIkhhd2FpaSIsCiAgICAgICJJZGFobyIsCiAgICAgICJJbGxpbm9pcyIsCiAgICAgICJJbmRpYW5hIiwKICAgICAgIklvd2EiLAogICAgICAiS2Fuc2FzIiwKICAgICAgIktlbnR1Y2t5IiwKICAgICAgIkxvdWlzaWFuYSIsCiAgICAgICJNYWluZSIsCiAgICAgICJNYXJzaGFsbCBJc2xhbmRzIiwKICAgICAgIk1hcnlsYW5kIiwKICAgICAgIk1hc3NhY2h1c2V0dHMiLAogICAgICAiTWljaGlnYW4iLAogICAgICAiTWlubmVzb3RhIiwKICAgICAgIk1pc3Npc3NpcHBpIiwKICAgICAgIk1pc3NvdXJpIiwKICAgICAgIk1vbnRhbmEiLAogICAgICAiTmVicmFza2EiLAogICAgICAiTmV2YWRhIiwKICAgICAgIk5ldyBIYW1wc2hpcmUiLAogICAgICAiTmV3IEplcnNleSIsCiAgICAgICJOZXcgTWV4aWNvIiwKICAgICAgIk5ldyBZb3JrIiwKICAgICAgIk5vcnRoIENhcm9saW5hIiwKICAgICAgIk5vcnRoIERha290YSIsCiAgICAgICJOb3J0aGVybiBNYXJpYW5hIElzbGFuZHMiLAogICAgICAiT2hpbyIsCiAgICAgICJPa2xhaG9tYSIsCiAgICAgICJPcmVnb24iLAogICAgICAiUGFsYXUiLAogICAgICAiUGVubnN5bHZhbmlhIiwKICAgICAgIlB1ZXJ0byBSaWNvIiwKICAgICAgIlJob2RlIElzbGFuZCIsCiAgICAgICJTb3V0aCBDYXJvbGluYSIsCiAgICAgICJTb3V0aCBEYWtvdGEiLAogICAgICAiVGVubmVzc2VlIiwKICAgICAgIlRleGFzIiwKICAgICAgIlV0YWgiLAogICAgICAiVmVybW9udCIsCiAgICAgICJWaXJnaW4gSXNsYW5kIiwKICAgICAgIlZpcmdpbmlhIiwKICAgICAgIldhc2hpbmd0b24iLAogICAgICAiV2VzdCBWaXJnaW5pYSIsCiAgICAgICJXaXNjb25zaW4iLAogICAgICAiV3lvbWluZyIsCiAgICBdLAogIH0pLAogIHdhdGNoOiB7CiAgICBzZWFyY2godmFsKSB7CiAgICAgIHZhbCAmJiB2YWwgIT09IHRoaXMuc2VsZWN0ICYmIHRoaXMucXVlcnlTZWxlY3Rpb25zKHZhbCk7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgcXVlcnlTZWxlY3Rpb25zKHYpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgLy8gU2ltdWxhdGVkIGFqYXggcXVlcnkKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuc3RhdGVzLmZpbHRlcigoZSkgPT4gewogICAgICAgICAgcmV0dXJuIChlIHx8ICIiKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoKHYgfHwgIiIpLnRvTG93ZXJDYXNlKCkpID4gLTE7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0sIDUwMCk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["AutocompletesAsynchronousItems.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutocompletesAsynchronousItems.vue","sourceRoot":"src/components/vuetifyComponents/autocompletes","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- Autocompletes Asynchronous Items -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      Sometimes you need to load data externally based upon a search query. Use\n      the <code>search-input</code> prop with the\n      <span class=\"grey--text text--darken-4 font-weight-bold\">.sync</span>\n      modifier when using the <code>autocomplete</code> prop. We also make use\n      of the new <code>cache-items</code> prop. This will keep a unique list of\n      all items that have been passed to the <code>items</code> prop and is\n      <span class=\"grey--text text--darken-4 font-weight-bold\">REQUIRED</span>\n      when using asynchronous items and the\n      <span class=\"grey--text text--darken-4 font-weight-bold\">multiple</span>\n      prop.\n    </v-list-item-subtitle>\n    <div class=\"mt-4 border\">\n      <v-toolbar light color=\"white\">\n        <v-toolbar-title>State selection</v-toolbar-title>\n        <v-autocomplete\n          v-model=\"select\"\n          :loading=\"loading\"\n          :items=\"items\"\n          :search-input.sync=\"search\"\n          cache-items\n          class=\"mx-4\"\n          flat\n          hide-no-data\n          hide-details\n          label=\"What state are you from?\"\n          solo-inverted\n        ></v-autocomplete>\n        <v-btn icon>\n          <v-icon>mdi-dots-vertical</v-icon>\n        </v-btn>\n      </v-toolbar>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AutocompletesAsynchronousItems\",\n\n  data: () => ({\n    loading: false,\n    items: [],\n    search: null,\n    select: null,\n    states: [\n      \"Alabama\",\n      \"Alaska\",\n      \"American Samoa\",\n      \"Arizona\",\n      \"Arkansas\",\n      \"California\",\n      \"Colorado\",\n      \"Connecticut\",\n      \"Delaware\",\n      \"District of Columbia\",\n      \"Federated States of Micronesia\",\n      \"Florida\",\n      \"Georgia\",\n      \"Guam\",\n      \"Hawaii\",\n      \"Idaho\",\n      \"Illinois\",\n      \"Indiana\",\n      \"Iowa\",\n      \"Kansas\",\n      \"Kentucky\",\n      \"Louisiana\",\n      \"Maine\",\n      \"Marshall Islands\",\n      \"Maryland\",\n      \"Massachusetts\",\n      \"Michigan\",\n      \"Minnesota\",\n      \"Mississippi\",\n      \"Missouri\",\n      \"Montana\",\n      \"Nebraska\",\n      \"Nevada\",\n      \"New Hampshire\",\n      \"New Jersey\",\n      \"New Mexico\",\n      \"New York\",\n      \"North Carolina\",\n      \"North Dakota\",\n      \"Northern Mariana Islands\",\n      \"Ohio\",\n      \"Oklahoma\",\n      \"Oregon\",\n      \"Palau\",\n      \"Pennsylvania\",\n      \"Puerto Rico\",\n      \"Rhode Island\",\n      \"South Carolina\",\n      \"South Dakota\",\n      \"Tennessee\",\n      \"Texas\",\n      \"Utah\",\n      \"Vermont\",\n      \"Virgin Island\",\n      \"Virginia\",\n      \"Washington\",\n      \"West Virginia\",\n      \"Wisconsin\",\n      \"Wyoming\",\n    ],\n  }),\n  watch: {\n    search(val) {\n      val && val !== this.select && this.querySelections(val);\n    },\n  },\n  methods: {\n    querySelections(v) {\n      this.loading = true;\n      // Simulated ajax query\n      setTimeout(() => {\n        this.items = this.states.filter((e) => {\n          return (e || \"\").toLowerCase().indexOf((v || \"\").toLowerCase()) > -1;\n        });\n        this.loading = false;\n      }, 500);\n    },\n  },\n};\n</script>"]}]}