{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyStyleComponents/text/TextRTLAlignment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyStyleComponents/text/TextRTLAlignment.vue","mtime":1627753466735},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGV4dFJUTEFsaWdubWVudCIsCgogIGRhdGE6ICgpID0+ICh7CiAgfSkKfTsK"},{"version":3,"sources":["TextRTLAlignment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA","file":"TextRTLAlignment.vue","sourceRoot":"src/components/vuetifyStyleComponents/text","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- TextRTLAlignment -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap mt-4\">\n        When using RTL, you may want to keep the alignment regardless of the rtl designation. This can be achieved using text alignment helper classes in the following format: <code>text-breakpoint-direction</code>, where breakpoint can be <code>sm</code>, <code>md</code>, <code>lg</code>, or <code>xl</code> and direction can be <code>left</code> or <code>right</code>. You may also want alignment to respond to rtl which can be done using directions <code>start</code> and <code>end</code>.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <div class=\"pa-4 grey lighten-2\">\n                <p class=\"subtitle-2 text-center\">Agnostic RTL Alignment</p>\n\n                <p class=\"text-sm-left\">Left aligned text on viewports sized SM (small) or wider for rtl or ltr.</p>\n                <p class=\"text-md-left\">Left aligned text on viewports sized MD (medium) or wider for rtl or ltr.</p>\n                <p class=\"text-lg-right\">Right aligned text on viewports sized LG (large) or wider for rtl or ltr.</p>\n                <p class=\"text-xl-left\">Left aligned text on viewports sized XL (extra-large) or wider for rtl or ltr.</p>\n\n                <p class=\"subtitle-2 text-center\">Responsive RTL Alignment</p>\n\n                <p class=\"text-start\">Left aligned text on ltr and right aligned on rtl.</p>\n                <p class=\"text-end\">Right aligned text on ltr and left aligned on rtl.</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"TextRTLAlignment\",\n\n  data: () => ({\n  })\n};\n</script>"]}]}