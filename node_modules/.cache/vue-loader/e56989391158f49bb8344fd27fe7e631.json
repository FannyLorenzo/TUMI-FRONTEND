{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewCustomSelectableicons.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewCustomSelectableicons.vue","mtime":1627753466731},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlZXZpZXdDdXN0b21TZWxlY3RhYmxlaWNvbnMiLAoKICBkYXRhOiAoKSA9PiAoewogICAgYnJld2VyaWVzOiBbXSwKICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICB0cmVlOiBbXSwKICAgIHR5cGVzOiBbXSwKICB9KSwKICBjb21wdXRlZDogewogICAgaXRlbXMoKSB7CiAgICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy50eXBlcy5tYXAoKHR5cGUpID0+ICh7CiAgICAgICAgaWQ6IHR5cGUsCiAgICAgICAgbmFtZTogdGhpcy5nZXROYW1lKHR5cGUpLAogICAgICAgIGNoaWxkcmVuOiB0aGlzLmdldENoaWxkcmVuKHR5cGUpLAogICAgICB9KSk7CgogICAgICByZXR1cm4gWwogICAgICAgIHsKICAgICAgICAgIGlkOiAxLAogICAgICAgICAgbmFtZTogIkFsbCBCcmV3ZXJpZXMiLAogICAgICAgICAgY2hpbGRyZW4sCiAgICAgICAgfSwKICAgICAgXTsKICAgIH0sCiAgICBzaG91bGRTaG93VHJlZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuYnJld2VyaWVzLmxlbmd0aCA+IDAgJiYgIXRoaXMuaXNMb2FkaW5nOwogICAgfSwKICB9LAoKICB3YXRjaDogewogICAgYnJld2VyaWVzKHZhbCkgewogICAgICB0aGlzLnR5cGVzID0gdmFsCiAgICAgICAgLnJlZHVjZSgoYWNjLCBjdXIpID0+IHsKICAgICAgICAgIGNvbnN0IHR5cGUgPSBjdXIuYnJld2VyeV90eXBlOwoKICAgICAgICAgIGlmICghYWNjLmluY2x1ZGVzKHR5cGUpKSBhY2MucHVzaCh0eXBlKTsKCiAgICAgICAgICByZXR1cm4gYWNjOwogICAgICAgIH0sIFtdKQogICAgICAgIC5zb3J0KCk7CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIGZldGNoKCkgewogICAgICBpZiAodGhpcy5icmV3ZXJpZXMubGVuZ3RoKSByZXR1cm47CgogICAgICByZXR1cm4gZmV0Y2goImh0dHBzOi8vYXBpLm9wZW5icmV3ZXJ5ZGIub3JnL2JyZXdlcmllcyIpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSkKICAgICAgICAudGhlbigoZGF0YSkgPT4gKHRoaXMuYnJld2VyaWVzID0gZGF0YSkpCiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpOwogICAgfSwKICAgIGdldENoaWxkcmVuKHR5cGUpIHsKICAgICAgY29uc3QgYnJld2VyaWVzID0gW107CgogICAgICBmb3IgKGNvbnN0IGJyZXdlcnkgb2YgdGhpcy5icmV3ZXJpZXMpIHsKICAgICAgICBpZiAoYnJld2VyeS5icmV3ZXJ5X3R5cGUgIT09IHR5cGUpIGNvbnRpbnVlOwoKICAgICAgICBicmV3ZXJpZXMucHVzaCh7CiAgICAgICAgICAuLi5icmV3ZXJ5LAogICAgICAgICAgbmFtZTogdGhpcy5nZXROYW1lKGJyZXdlcnkubmFtZSksCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBicmV3ZXJpZXMuc29ydCgoYSwgYikgPT4gewogICAgICAgIHJldHVybiBhLm5hbWUgPiBiLm5hbWUgPyAxIDogLTE7CiAgICAgIH0pOwogICAgfSwKICAgIGdldE5hbWUobmFtZSkgewogICAgICByZXR1cm4gYCR7bmFtZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKX0ke25hbWUuc2xpY2UoMSl9YDsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["TreeviewCustomSelectableicons.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeviewCustomSelectableicons.vue","sourceRoot":"src/components/vuetifyComponents/treeview","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- TreeviewCustomSelectableicons -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      Customize the on, off and indeterminate icons for your selectable tree.\n      Combine with other advanced functionality like API loaded items.\n    </v-list-item-subtitle>\n    <div class=\"mt-4\">\n      <v-toolbar color=\"primary\" dark flat>\n        <v-icon>mdi-silverware</v-icon>\n        <v-toolbar-title>Local hotspots</v-toolbar-title>\n      </v-toolbar>\n\n      <v-row>\n        <v-col>\n          <v-card-text>\n            <v-treeview\n              v-model=\"tree\"\n              :load-children=\"fetch\"\n              :items=\"items\"\n              selected-color=\"primary\"\n              open-on-click\n              selectable\n              return-object\n              expand-icon=\"mdi-chevron-down\"\n              on-icon=\"mdi-bookmark\"\n              off-icon=\"mdi-bookmark-outline\"\n              indeterminate-icon=\"mdi-bookmark-minus\"\n            >\n            </v-treeview>\n          </v-card-text>\n        </v-col>\n\n        <v-divider vertical></v-divider>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card-text>\n            <div\n              v-if=\"tree.length === 0\"\n              key=\"title\"\n              class=\"title font-weight-light grey--text pa-4 text-center\"\n            >\n              Select your favorite breweries\n            </div>\n\n            <v-scroll-x-transition group hide-on-leave>\n              <v-chip\n                v-for=\"(selection, i) in tree\"\n                :key=\"i\"\n                color=\"grey\"\n                dark\n                small\n                class=\"ma-1\"\n              >\n                <v-icon left small>mdi-beer</v-icon>\n                {{ selection.name }}\n              </v-chip>\n            </v-scroll-x-transition>\n          </v-card-text>\n        </v-col>\n      </v-row>\n\n      <v-divider></v-divider>\n\n      <v-card-actions>\n        <v-btn text @click=\"tree = []\"> Reset </v-btn>\n\n        <v-spacer></v-spacer>\n\n        <v-btn class=\"white--text\" color=\"green darken-1\" depressed>\n          Save\n          <v-icon right>mdi-content-save</v-icon>\n        </v-btn>\n      </v-card-actions>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TreeviewCustomSelectableicons\",\n\n  data: () => ({\n    breweries: [],\n    isLoading: false,\n    tree: [],\n    types: [],\n  }),\n  computed: {\n    items() {\n      const children = this.types.map((type) => ({\n        id: type,\n        name: this.getName(type),\n        children: this.getChildren(type),\n      }));\n\n      return [\n        {\n          id: 1,\n          name: \"All Breweries\",\n          children,\n        },\n      ];\n    },\n    shouldShowTree() {\n      return this.breweries.length > 0 && !this.isLoading;\n    },\n  },\n\n  watch: {\n    breweries(val) {\n      this.types = val\n        .reduce((acc, cur) => {\n          const type = cur.brewery_type;\n\n          if (!acc.includes(type)) acc.push(type);\n\n          return acc;\n        }, [])\n        .sort();\n    },\n  },\n\n  methods: {\n    fetch() {\n      if (this.breweries.length) return;\n\n      return fetch(\"https://api.openbrewerydb.org/breweries\")\n        .then((res) => res.json())\n        .then((data) => (this.breweries = data))\n        .catch((err) => console.log(err));\n    },\n    getChildren(type) {\n      const breweries = [];\n\n      for (const brewery of this.breweries) {\n        if (brewery.brewery_type !== type) continue;\n\n        breweries.push({\n          ...brewery,\n          name: this.getName(brewery.name),\n        });\n      }\n\n      return breweries.sort((a, b) => {\n        return a.name > b.name ? 1 : -1;\n      });\n    },\n    getName(name) {\n      return `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n    },\n  },\n};\n</script>"]}]}