{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/date-pickers/DatePickersInFormattingDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/date-pickers/DatePickersInFormattingDate.vue","mtime":1627753466715},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGF0ZVBpY2tlcnNJbkZvcm1hdHRpbmdEYXRlIiwKCiAgZGF0YTogdm0gPT4gKHsKICAgICAgZGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCksCiAgICAgIGRhdGVGb3JtYXR0ZWQ6IHZtLmZvcm1hdERhdGUobmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCkpLAogICAgICBtZW51MTogZmFsc2UsCiAgICAgIG1lbnUyOiBmYWxzZSwKICAgIH0pLAoKICAgIGNvbXB1dGVkOiB7CiAgICAgIGNvbXB1dGVkRGF0ZUZvcm1hdHRlZCAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLmRhdGUpCiAgICAgIH0sCiAgICB9LAoKICAgIHdhdGNoOiB7CiAgICAgIGRhdGUgKCkgewogICAgICAgIHRoaXMuZGF0ZUZvcm1hdHRlZCA9IHRoaXMuZm9ybWF0RGF0ZSh0aGlzLmRhdGUpCiAgICAgIH0sCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgZm9ybWF0RGF0ZSAoZGF0ZSkgewogICAgICAgIGlmICghZGF0ZSkgcmV0dXJuIG51bGwKCiAgICAgICAgY29uc3QgW3llYXIsIG1vbnRoLCBkYXldID0gZGF0ZS5zcGxpdCgnLScpCiAgICAgICAgcmV0dXJuIGAke21vbnRofS8ke2RheX0vJHt5ZWFyfWAKICAgICAgfSwKICAgICAgcGFyc2VEYXRlIChkYXRlKSB7CiAgICAgICAgaWYgKCFkYXRlKSByZXR1cm4gbnVsbAoKICAgICAgICBjb25zdCBbbW9udGgsIGRheSwgeWVhcl0gPSBkYXRlLnNwbGl0KCcvJykKICAgICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aC5wYWRTdGFydCgyLCAnMCcpfS0ke2RheS5wYWRTdGFydCgyLCAnMCcpfWAKICAgICAgfSwKICAgIH0sCn07Cg=="},{"version":3,"sources":["DatePickersInFormattingDate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DatePickersInFormattingDate.vue","sourceRoot":"src/components/vuetifyComponents/date-pickers","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- DatePickersInFormattingDate -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        If you need to display date in the custom format (different than YYYY-MM-DD) you need to use the formatting function.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-row>\n                <v-col cols=\"12\" lg=\"6\">\n                    <v-menu\n                    ref=\"menu1\"\n                    v-model=\"menu1\"\n                    :close-on-content-click=\"false\"\n                    transition=\"scale-transition\"\n                    offset-y\n                    max-width=\"290px\"\n                    min-width=\"290px\"\n                    >\n                    <template v-slot:activator=\"{ on }\">\n                        <v-text-field\n                        v-model=\"dateFormatted\"\n                        label=\"Date\"\n                        hint=\"MM/DD/YYYY format\"\n                        persistent-hint\n                        prepend-icon=\"mdi-calendar\"\n                        @blur=\"date = parseDate(dateFormatted)\"\n                        v-on=\"on\"\n                        ></v-text-field>\n                    </template>\n                    <v-date-picker v-model=\"date\" no-title @input=\"menu1 = false\"></v-date-picker>\n                    </v-menu>\n                    <p>Date in ISO format: <strong>{{ date }}</strong></p>\n                </v-col>\n\n                <v-col cols=\"12\" lg=\"6\">\n                    <v-menu\n                    v-model=\"menu2\"\n                    :close-on-content-click=\"false\"\n                    transition=\"scale-transition\"\n                    offset-y\n                    max-width=\"290px\"\n                    min-width=\"290px\"\n                    >\n                    <template v-slot:activator=\"{ on }\">\n                        <v-text-field\n                        v-model=\"computedDateFormatted\"\n                        label=\"Date (read only text field)\"\n                        hint=\"MM/DD/YYYY format\"\n                        persistent-hint\n                        prepend-icon=\"mdi-calendar\"\n                        readonly\n                        v-on=\"on\"\n                        ></v-text-field>\n                    </template>\n                    <v-date-picker v-model=\"date\" no-title @input=\"menu2 = false\"></v-date-picker>\n                    </v-menu>\n                    <p>Date in ISO format: <strong>{{ date }}</strong></p>\n                </v-col>\n                </v-row>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"DatePickersInFormattingDate\",\n\n  data: vm => ({\n      date: new Date().toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate(new Date().toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormatted () {\n        return this.formatDate(this.date)\n      },\n    },\n\n    watch: {\n      date () {\n        this.dateFormatted = this.formatDate(this.date)\n      },\n    },\n\n    methods: {\n      formatDate (date) {\n        if (!date) return null\n\n        const [year, month, day] = date.split('-')\n        return `${month}/${day}/${year}`\n      },\n      parseDate (date) {\n        if (!date) return null\n\n        const [month, day, year] = date.split('/')\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n      },\n    },\n};\n</script>"]}]}