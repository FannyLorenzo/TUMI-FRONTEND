{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/dialogs/DialogsOverflowed.vue?vue&type=template&id=0e9fb586&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/dialogs/DialogsOverflowed.vue","mtime":1627753466715},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjwhLS0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLS0+CjwhLS0gT3ZlcmZsb3dlZCAtLT4KPCEtLSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAtLT4KPGRpdj4KICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlIGNsYXNzPSJ0ZXh0LXdyYXAiPgogICAgTW9kYWxzIHRoYXQgZG8gbm90IGZpdCB3aXRoaW4gdGhlIGF2YWlsYWJsZSB3aW5kb3cgc3BhY2Ugd2lsbCBzY3JvbGwgdGhlIGNvbnRhaW5lci4KICAgIDwvdi1saXN0LWl0ZW0tc3VidGl0bGU+CiAgICA8ZGl2IGNsYXNzPSJtdC00IHRleHQtY2VudGVyIj4KICAgICAgICA8di1kaWFsb2cgdi1tb2RlbD0iZGlhbG9nIiB3aWR0aD0iNjAwcHgiPgogICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiB9Ij4KICAgICAgICAgICAgICAgIDx2LWJ0biBjb2xvcj0icHJpbWFyeSIgZGFyayB2LW9uPSJvbiI+T3BlbiBEaWFsb2c8L3YtYnRuPgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8di1jYXJkPgogICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZT4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoZWFkbGluZSI+VXNlIEdvb2dsZSdzIGxvY2F0aW9uIHNlcnZpY2U/PC9zcGFuPgogICAgICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgICAgICA8di1jYXJkLXRleHQ+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIHNlbXBlciBxdWlzLCBzYXBpZW4gaWQgbmF0b3F1ZSBlbGl0LiBOb3N0cmEgdXJuYSBhdCwgbWFnbmEgYXQgbmVxdWUgc2VkIHNlZCBhbnRlIGltcGVyZGlldCwgZG9sb3IgbWF1cmlzIGN1cnN1cyB2ZWxpdCwgdmVsaXQgbm9uLCBzZW0gbmVjLiBWb2x1dHBhdCBzZW0gcmlkaWN1bHVzIHBsYWNlcmF0IGxlbywgYXVndWUgaW4sIGR1aXMgZXJhdCBwcm9pbiBjb25kaW1lbnR1bSBpbiBhIGVnZXQsIHNlZCBmZXJtZW50dW0gc2VkIHZlc3RpYnVsdW0gdmFyaXVzIGFjLCB2ZXN0aWJ1bHVtIHZvbHV0cGF0IG9yY2kgdXQgZWxpdCBlZ2V0IHRvcnRvci4gVWx0cmljZXMgbmFzY2V0dXIgbnVsbGEgZ3JhdmlkYSBhbnRlIGFyY3UuIFBoYXJldHJhIHJob25jdXMgbW9yYmkgaXBzdW0sIG51bmMgdGVtcG9yIGRlYml0aXMsIGlwc3VtIHBlbGxlbnRlc3F1ZSwgdml0YWUgaWQgcXVhbSB1dCBtYXVyaXMgZHVpIHRlbXBvciwgYXB0ZW50IG5vbi4gUXVpc3F1ZSB0dXJwaXMuIFBoYXNlbGx1cyBxdWlzIGxlY3R1cyBsdWN0dXMgb3JjaSBlZ2V0IHJob25jdXMuIEFtZXQgZG9uZWMgdmVzdGlidWx1bSBtYXR0aXMgY29tbW9kbywgbnVsbGEgYWxpcXVldCwgbmliaCBwcmFlc2VudCwgZWxlbWVudHVtIG51bGxhLiBTaXQgbGFjdXMgcGhhcmV0cmEgdGVtcHVzIG1hZ25hIG5lcXVlIHBlbGxlbnRlc3F1ZSwgbnVsbGEgdmVsIGVyYXQuCiAgICAgICAgICAgICAgICBKdXN0byBleCBxdWlzcXVlIG51bGxhIGFjY3VzYW11cyB2ZW5lbmF0aXMsIHNlZCBxdWlzLiBOaWJoIHBoYXNlbGx1cyBncmF2aWRhIG1ldHVzIGluLCBmdXNjZSBhZW5lYW4gdXQgZXJhdCBjb21tb2RvIGVyb3MuIFV0IHR1cnBpcywgZHVpIGludGVnZXIsIG5vbnVtbXkgcGVkZSBwbGFjZWF0IG5lYyBpbiBzaXQgbGVvLiBGYXVjaWJ1cyBwb3J0dGl0b3IgaWxsbyB0YWNpdGkgb2RpbywgYW1ldCB2aXZlcnJhIHNjZWxlcmlzcXVlIHF1aXMgcXVpcyBldCB0b3J0b3IsIGN1cmFiaXR1ciBtb3JiaSBhLiBFbmltIHRlbXBvciBhdCwgcnV0cnVtIGVsaXQgY29uZGltZW50dW0sIGFtZXQgcnV0cnVtIHZpdGFlIHRlbXBvciB0b3JxdWVudCBudW5jLiBQcmFlc2VudCB2ZXN0aWJ1bHVtIGludGVnZXIgbWF4aW1lIGZlbGlzLiBOZXF1ZSBhZW5lYW4gcXVpYSB2aXRhZSBub3N0cmEsIHRlbXB1cyBlbGl0IGVuaW0gaWQgZHVpLCBhdCBlZ2VzdGFzIHB1bHZpbmFyLiBJbnRlZ2VyIGxpYmVybyB2ZXN0aWJ1bHVtLCBxdWlzIGJsYW5kaXQgc2NlbGVyaXNxdWUgbWF0dGlzIGZlcm1lbnR1bSBudWxsYSwgdG9ydG9yIGRvbmVjIHZlc3RpYnVsdW0gZG9sb3IgYW1ldCBlZ2V0LCBlbGl0IG51bGxhbS4gQWxpcXVhbSBsZW8gcGhhc2VsbHVzIGFsaXF1YW0gY3VyYWJpdHVyIG1ldHVzIGEsIG51bGxhIGp1c3RvIG1hdHRpcyBkdWlzIGludGVyZHVtIHZlbCwgbW9sbGlzIHZpdGFlIGV0IGlkLCB2ZXN0aWJ1bHVtIGVyYXQgcmlkaWN1bHVzIHNpdCBwdWx2aW5hciBqdXN0byBzZWQuIFZlaGljdWxhIGNvbnZhbGxpcywgZXQgbnVsbGEgd2lzaSwgYW1ldCB2ZXN0aWJ1bHVtIHJpc3VzLCBxdWFtIGFjIGVnZXN0YXMuCiAgICAgICAgICAgICAgICBFdCB2aXRhZSwgbnVsbGEgZ3JhdmlkYSBlcmF0IHNjZWxlcmlzcXVlIG51bGxhbSBudW5jIHBlbGxlbnRlc3F1ZSwgYSBkaWN0dW1zdCBjcmFzIGF1Z3VlLCBwdXJ1cyBpbXBlcmRpZXQgbm9uLiBWYXJpdXMgbW9udGVzIGN1cnN1cyB2YXJpdXMgdmVsIHRvcnRvciwgbmVjIGxlbyBhIHF1aSwgbWFnbmkgY3JhcywgdmVsaXQgdmVsIGNvbnNlY3RldHVlciBsb2JvcnRpcyB2ZWwuIE5pYmggZXJhdCBldCB3aXNpIGZlbGlzIGxlbyBwb3J0dGl0b3IsIHNhcGllbiBuaWJoIHNhcGllbiBwZWRlIG1pLCBzZWQgZWdldCBwb3J0dGl0b3IsIHJlcGVsbGVuZHVzIGFyY3UgYWMgcXVpcy4gTHVjdHVzIHZ1bHB1dGF0ZSBhdXQgZXN0IHNlbSBtYWduYSwgcGxhY2VyYXQgYWNjdW1zYW4gbnVuYyB2ZXN0aWJ1bHVtIGlwc3VtIGFjIGF1Y3RvciwgbWFlY2VuYXMgbG9yZW0gaW4gdXQgbmVjIG1hdXJpcyB0b3J0b3IsIGRvbG9yaWJ1cyB2YXJpdXMgc2VtIHRvcnRvciB2ZXN0aWJ1bHVtIG1vbGxpcywgZWxlaWZlbmQgdG9ydG9yIGZlbGlzIHRlbXB1cyBsYWN1cyBldSBldS4gRWxlaWZlbmQgdmVsIGV1LCBudWxsYW0gbWFlY2VuYXMgbWF1cmlzIG5lYyBudW5jIGV1aXNtb2QsIHRvcnRvciBwb3J0YSByaWRpY3VsdXMgcG90ZW50aSwgbWFzc2EgdHJpc3RpcXVlIG5hbSBtYWduYSwgZXQgd2lzaSBwbGFjZXJhdCBldCBlcmF0IGFudGUuIEVnZXQgcGVkZSBlcmF0IGluIGZhY2lsaXNpcywgZmVybWVudHVtIHZlbmVuYXRpcyBzb2RhbGVzLiBBYyB0b3J0b3Igc29jaWlzIGV0IG5vbiBhbmltaSB0cmlzdGlxdWUsIHJob25jdXMgbWFsZXN1YWRhLCB1dCBhcmN1IHZvbHV0cGF0IHNjZWxlcmlzcXVlIHNvbGxpY2l0dWRpbiwgZWxpdCBjdXJhYml0dXIgZHVpIHBlZGUgcHVydXMgZG9sb3IsIGludGVnZXIgYWVuZWFuIHJpc3VzIHRhY2l0aSBudWxsYSBlbGVpZmVuZCBhY2N1bXNhbi4gQXQgcHVsdmluYXIgZGlhbSBwYXJ0dXJpZW50LCBpbnRlcmR1bSBtaSB2ZWxpdCBhbGlxdWV0IGV0IGEuIEFyY3UgYXQgYWMgcGxhY2VyYXQgZWdldCBqdXN0byBzZW1wZXIsIHB1cnVzIHNvY2lpcyBjdXJhYml0dXIgbWkgaXBzdW0gY29uc2VxdWF0IHV0LCBtb2xsaXMgdmVzdGlidWx1bSwgZXN0IGFudGUgb3JuYXJlIGxhY3VzIHNlbS4gTmVxdWUgbWFnbmEgbWF1cmlzLCBjb21tb2RvIHF1aXNxdWUsIHByYWVzZW50IHNlbXBlciBzdXNjaXBpdCBsb2JvcnRpcyBuYW0uIEp1c3RvIG1hbGVzdWFkYSBjdXJzdXMgYWMgbnVuYyBsaXRvcmEgbnVuYy4gVGVsbHVzIGFjLCBpbiBsb2JvcnRpcyBudW5jLCBtb250ZXMgbGVjdHVzIHB1cnVzIGZlcm1lbnR1bS4KICAgICAgICAgICAgICAgIEFjIHNpdCB3aXNpLiBTb2RhbGVzIGFsaXF1YW0sIHNlZCB2ZXN0aWJ1bHVtIG51bGxhbSBhcmN1IHNpdCByaXN1cyBhcmN1LCBpZCBsdWN0dXMgdml0YWUgbG9yZW0gbmliaCwgaW50ZWdlciBuZWMgbnVsbGFtIGNsYXNzIGN1cnN1cyBtaSwgcHVydXMgYXJjdSBsZWN0dXMuIFZlbCBhbnRlIHN1c2NpcGl0IHZvbHV0cGF0IHBvdGVudGkgbWF0dGlzIHNlZCwgd2lzaSBldSBwbGFjZXJhdCBhbGlxdWFtIGVyYXQsIGxlY3R1cyBtb3JiaSBsb2JvcnRpcyBhdCBhc3N1bWVuZGEuIENvbnNlcXVhdCBuZXF1ZSBwdXJ1cyBpcHN1bSB2b2x1cHRhcyBvZGlvLCBuZXR1cyB2ZXN0aWJ1bHVtIHV0IG5lYywgc3VzcGVuZGlzc2UgcGVsbGVudGVzcXVlIG5lYyBlbmltIGluLiBXaXNpIGRpY3R1bSBzZWQgc2VtcGVyIGEsIGlwc3VtIGVyYXQgdGVsbHVzIGhhYml0YXNzZSBlc3QsIGVyYXQgc2VtIG9ybmFyZSwgdml0YWUgcXVpc3F1ZSB1bHRyaWNpZXMuIER1aSBzZWQgYmxhbmRpdC4gVGVtcG9yIGV0IGZhdWNpYnVzIGp1c3RvIHNlZCBsdWN0dXMsIG5lYyB2aXRhZSB2aXRhZS4gTnVuYyBuaWJoIHBlZGUsIGlwc3VtIHZlc3RpYnVsdW0gYWVuZWFuIGxlbyBhbnRlIHVsdHJpY2llcywgbmFtIGNyYXMgcXVpcyBzZWQgcGVuYXRpYnVzIGFtZXQuIEluIG1hdXJpcyBhLiBJbnRlZ2VyIG1ldHVzIG1hdXJpcyB0b3J0b3IsIGV0IHJ1dHJ1bSB2ZXN0aWJ1bHVtIHVsdHJpY2llcywgdXQgcGhhc2VsbHVzIGluIHVsbGFtY29ycGVyIHV0IG1vbGxpdCwgZXUganVzdG8uIEN1cnN1cyBwcmV0aXVtIHZlbmVuYXRpcy4KICAgICAgICAgICAgICAgIENyYXMgcGVsbGVudGVzcXVlIHZlbCBzb2RhbGVzIGFjY3Vtc2FuIGFlbmVhbi4gRmV1Z2lhdCBtZXR1cyBzaXQgbmVjIGluIGFsaXF1ZXQgYW1ldCwgcG9ydHRpdG9yIHByZXRpdW0gdnVscHV0YXRlIG1hc3NhLiBDb25zZXF1YXQgaXBzdW0gbHVjdHVzIHF1aXNxdWUgYWRpcGlzY2luZyBsaWJlcm8uIFdpc2kgc29sbGljaXR1ZGluLiBFZ2V0IHZpdGFlIGFjIGxvYm9ydGlzLCBsb3JlbSBuYXRvcXVlIHZlc3RpYnVsdW0gZXQsIGFsaXF1ZXQgZmF1Y2lidXMgYXQgbW9yYmkgbmliaCwgdmVsIGNvbmRpbWVudHVtLiBNYXNzYSB1bmRlIG9yY2kgc2VkIGlkIHNlZCwgb2RpbyBkb25lYyBjb25ndWUgbmVjIHByYWVzZW50IGFtZXQuIEh5bWVuYWVvcyB2ZWxpdCBsYWN1cywgcXVpcyB2aXZhbXVzIGxpYmVybyB0ZW1wdXMgZHVpcywgZXUgbmlzaSBldSwgaXBzdW0gYXQgYWNjdW1zYW4gcGVkZSBqdXN0byBtb3JiaSBkb25lYywgbWFzc2EgZXQgbGliZXJvIHNpdCByaXN1cyBuZXF1ZSB0b3J0b3IuIFV0IHNlZCBzZWQgZXRpYW0gaGVuZHJlcml0IGRhcGlidXMsIHF1aXMgbWV0dXMgc3VzcGVuZGlzc2UgbmliaC4KICAgICAgICAgICAgICAgIEZyaW5naWxsYSB0ZW1wb3IgZmVsaXMgYXVndWUgbWFnbmEuIEN1bSBhcmN1IGEsIGlkIHZpdGFlLiBQZWxsZW50ZXNxdWUgcGhhcmV0cmEgaW4gY3JhcyBzb2NpaXMgYWRpcGlzY2luZyBlc3QuIE5pYmggbmVjIG1hdHRpcyBhdCBtYWVjZW5hcywgbmlzbCBvcmNpIGFsaXF1YW0gbnVsbGEganVzdG8gZWdlc3RhcyB2ZW5lbmF0aXMsIGVsZW1lbnR1bSBkdWlzIHZlbCBwb3J0YSBlcm9zLCBtYXNzYSB2aXRhZSwgZWxpZ2VuZGkgaW1wZXJkaWV0IGFtZXQuIE5lYyBuZXF1ZSBsdWN0dXMgc3VzY2lwaXQsIGp1c3RvIHNlbSBwcmFlc2VudCwgdXQgbmlzbCBxdWlzcXVlLCB2b2x1dHBhdCB0b3JxdWVudCB3aXNpIHRlbGx1cyBhbGlxdWFtIHJlcHJlaGVuZGVyaXQsIGN1cmFiaXR1ciBjcmFzIGF0IHF1aXMgbWFzc2EgcG9ydHRpdG9yIG1hdXJpcy4gRXJvcyBzZWQgdWx0cmljZXMuIEFtZXQgZGlnbmlzc2ltIGp1c3RvIHVybmEgZmV1Z2lhdCBtYXVyaXMgbGl0b3JhLCBldGlhbSBhY2N1bXNhbiwgbG9ib3J0aXMgYSBvcmNpIHN1c3BlbmRpc3NlLiBTZW1wZXIgYWMgbWF1cmlzLCB2YXJpdXMgYmliZW5kdW0gcHJldGl1bSwgb3JjaSB1cm5hIG51bmMgdWxsYW1jb3JwZXIgYXVjdG9yLCBzYWVwZSBzZW0gaW50ZWdlciBxdWFtLCBhdCBmZXVnaWF0IGVnZXN0YXMgZHVpcy4gVXJuYSBsaWd1bGEgYW50ZS4gTGVvIGVsZW1lbnR1bSBub251bW15LiBTYWdpdHRpcyBtYXVyaXMgZXN0IGluIGlwc3VtLCBudWxsYSBhbWV0IG5vbiBqdXN0bywgcHJvaW4gaWQgcG90ZW50aSBwbGF0ZWEgcG9zdWVyZSBzaXQgdXQsIG51bmMgc2l0IGVyYXQgYmliZW5kdW0uIE5pYmggaWQgYXVjdG9yLCBhYiBudWxsYSB2aXZhbXVzIHVsdHJpY2VzLCBwb3N1ZXJlIG1vcmJpIG51bmMgdGVsbHVzIGdyYXZpZGEgdml2YW11cy4KICAgICAgICAgICAgICAgIE1hdXJpcyBuZWMsIGZhY2lsaXNpIHF1YW0gZmVybWVudHVtLCB1dCBtYXVyaXMgaW50ZWdlciwgb3JjaSB0ZWxsdXMgdGVtcHVzIGRpYW0gdXQgaW4gcGVsbGVudGVzcXVlLiBXaXNpIGZhdWNpYnVzIHRlbXBvciBldCBvZGlvIGxlbyBkaWFtLCBlbGVpZmVuZCBxdWlzIGludGVnZXIgY3VyYWJpdHVyIHNpdCBzY2VsZXJpc3F1ZSBhYywgbWF1cmlzIGNvbnNlcXVhdCBsdWN0dXMgcXVhbSBwZW5hdGlidXMgZnJpbmdpbGxhIGRpcywgdml0YWUgbGFjdXMgaW4sIGVzdCBldSBhYyB0ZW1wdXMuIENvbnNlY3RldHVlciBhbWV0IGlwc3VtIGFtZXQgZHVpLCBzZWQgYmxhbmRpdCBpZCBzZWQuIFRlbGx1cyBpbnRlZ2VyLCBkaWduaXNzaW0gaWQgcGVkZSBzb2RhbGVzIHF1aXMsIGZlbGlzIGRvbG9yZW0gaWQgbWF1cmlzIG9yY2ksIG9yY2kgdGVtcHVzIHV0LiBOdWxsYW0gaHltZW5hZW9zLiBDdXJhYml0dXIgaW4gYSwgdG9ydG9yIHV0IHByYWVzZW50IHBsYWNlcmF0IHRpbmNpZHVudCBpbnRlcmR1bSwgYWMgZGlnbmlzc2ltIG1ldHVzIG5vbnVtbXkgaGVuZHJlcml0IHdpc2ksIGV0aWFtIHV0LgogICAgICAgICAgICAgICAgU2VtcGVyIHByYWVzZW50IGludGVnZXIgZnVzY2UsIHRvcnRvciBzdXNwZW5kaXNzZSwgYXVndWUgbGlndWxhIG9yY2kgYW50ZSBhc3BlcmlvcmVzIHVsbGFtY29ycGVyLiBJbiBzaXQgcGVyIG1pIHNlZCBzZWQsIG1pIHZlc3RpYnVsdW0gbXVzIG5hbSwgbW9yYmkgbWF1cmlzIG5lcXVlIHZpdGFlIGFsaXF1YW0gcHJvaW4gc2VuZWN0dXMuIEFjIGFtZXQgYXJjdSBtb2xsaXMgYW50ZSBjb25ndWUgZWxlbWVudHVtLCBpbmNlcHRvcyBlZ2V0IG9wdGlvIHF1YW0gcGVsbGVudGVzcXVlIHF1aXMgbG9ib3J0aXMsIHNvbGxpY2l0dWRpbiBzZWQgdmVzdGlidWx1bSBzb2xsaWNpdHVkaW4sIGxlY3R1cyBwYXJ0dXJpZW50IG51bGxhbSwgbGVvIG9yY2kgbGlndWxhIHVsdHJpY2VzLiBBdCB0aW5jaWR1bnQgZW5pbSwgc3VzcGVuZGlzc2UgZXN0IHNpdCBzZW0gYWMuIEFtZXQgdGVsbHVzIG1vbGVzdGllIGVzdCBwdXJ1cyBtYWduYSBhdWd1ZSwgbm9uIGV0aWFtIGV0IGluIHdpc2kgaWQuIE5vbiBjb21tb2RvLCBtZXR1cyBsb3JlbSBmYWNpbGlzaSBsb2JvcnRpcyBhYyB2ZWxpdCwgbW9udGVzIG5lcXVlIHNlZCByaXN1cyBjb25zZWN0ZXR1ZXIgZnJpbmdpbGxhIGRvbG9yLiBRdWFtIGp1c3RvIGV0IGludGVnZXIgYWxpcXVhbSwgY3Vyc3VzIG51bGxhIGVuaW0gb3JjaSwgbmFtIGN1cnN1cyBhZGlwaXNjaW5nLCBpbnRlZ2VyIHRvcnF1ZW50IG5vbiwgZnJpbmdpbGxhIHBlciBtYWVjZW5hcy4gTGliZXJvIGlwc3VtIHNlZCB0ZWxsdXMgcHVydXMgZXQuIER1aXMgbW9sZXN0aWUgcGxhY2VyYXQgZXJhdCBkb25lYyB1dC4gRG9sb3IgZW5pbSBlcmF0IG1hc3NhIGZhdWNpYnVzIHVsdHJpY2VzIGluLCBhbnRlIHVsdHJpY2llcyBvcmNpIGxhY3VzLCBsaWJlcm8gY29uc2VjdGV0dWVyIG1hdXJpcyBtYWduYSBmZXVnaWF0IG5lcXVlIGRhcGlidXMsIGRvbmVjIHByZXRpdW0gZXQuIEFwdGVudCBkdWksIGFsaXF1YW0gZXQgZXQgYW1ldCBub3N0cmEgbGlndWxhLgogICAgICAgICAgICAgICAgQXVndWUgY3VyYWJpdHVyIGR1aXMgZHVpIHZvbHV0cGF0LCB0ZW1wdXMgc2VkIHV0IHBlZGUgZG9uZWMuIEludGVyZHVtIGx1Y3R1cywgbGVjdHVzIG51bGxhIGFlbmVhbiBlbGl0LCBpZCBzaXQgbWFnbmEsIHZ1bHB1dGF0ZSB1bHRyaWNlcyBwZWxsZW50ZXNxdWUgdmVsIGlkIGZlcm1lbnR1bSBtb3JiaS4gVG9ydG9yIGV0LiBBZGlwaXNjaW5nIGF1Z3VlIGxvcmVtIGN1bSBub24gbGFjdXMsIHJ1dHJ1bSBzb2RhbGVzIGxhb3JlZXQgZHVpcyB0b3J0b3IsIG1vZGkgcGxhY2VyYXQgZmFjaWxpc2lzIGV0IG1hbGVzdWFkYSBlcm9zIGlwc3VtLCB2ZWhpY3VsYSB0ZW1wdXMuIEFjIHZpdmFtdXMgYW1ldCBub24gYWxpcXVhbSB2ZW5lbmF0aXMgbGVjdHVzLCBzb2Npb3NxdSBhZGlwaXNjaW5nIGNvbnNlcXVhdCBuZWMgYXJjdSBvZGlvLiBCbGFuZGl0IG9yY2kgbmVjIG5lYywgcG9zdWVyZSBpbiBwcmV0aXVtLCBlbmltIHV0LCBjb25zZWN0ZXR1ZXIgbnVsbGFtIHVybmEsIHJpc3VzIHZlbC4gTnVsbGFtIG9kaW8gdmVoaWN1bGEgbWFzc2Egc2VkLCBldGlhbSBzb2NpaXMgbWF1cmlzLCBsYWN1cyB1bGxhbWNvcnBlciwgbGliZXJvIGltcGVyZGlldCBub24gc29kYWxlcyBwbGFjZXJhdCBqdXN0byB2ZWhpY3VsYS4gTmVjIG1vcmJpIGltcGVyZGlldC4gRmVybWVudHVtIHNlbSBsaWJlcm8gaWFjdWxpcyBiaWJlbmR1bSBldCBlcm9zLCBlZ2V0IG1hZWNlbmFzIG5vbiBudW5jLCBhZCBwZWxsZW50ZXNxdWUuIFV0IG5lYyBkaWFtIGVsZW1lbnR1bSBpbnRlcmR1bS4gRWxlbWVudHVtIHZpdGFlIHRlbGx1cyBsYWN1cyB2aXRhZSwgaXBzdW0gcGhhc2VsbHVzLCBjb3Jwb3JpcyB2ZWhpY3VsYSBpbiBhYyBzZWQgbWFzc2Egdml2YW11cywgcnV0cnVtIGVsaXQsIHVsdHJpY2llcyBtZXR1cyB2b2x1dHBhdC4KICAgICAgICAgICAgICAgIFNlbXBlciB3aXNpIGV0LCBzb2xsaWNpdHVkaW4gbnVuYyB2ZXN0aWJ1bHVtLCBjdXJzdXMgYWNjdW1zYW4gbnVuYyBwZWRlIHRlbXB1cyBtaSBpcHN1bSwgbGlndWxhIHNlZC4gTm9uIGNvbmRpbWVudHVtIGFjIGRvbG9yIHNpdC4gTW9sbGlzIGV1IGFsaXF1YW0sIHZlbCBtYXR0aXMgbW9sbGlzIG1hc3NhIHV0IGRvbG9yIGFudGUsIHRlbXB1cyBsYWNpbmlhIGFyY3UuIFVybmEgdmVzdGlidWx1bSBsb3JlbSwgbnVsbGEgZmVybWVudHVtLCBpYWN1bGlzIHV0IGNvbmd1ZSBhYyB2aXZhbXVzLiBOYW0gbGliZXJvIG9yY2ksIHB1bHZpbmFyIG51bGxhLCBlbmltIHBlbGxlbnRlc3F1ZSBjb25zZWN0ZXR1ZXIgbGVvLCBmZXVnaWF0IHJob25jdXMgcmhvbmN1cyB2ZWwuIE1hZ25hIHNvY2lvc3F1IGRvbmVjLCBkaWN0dW0gY3Vyc3VzIHVsbGFtY29ycGVyIHZpdmVycmEuIFVsdHJpY2llcyBxdWlzIG9yY2kgbG9yZW0sIHN1c3BlbmRpc3NlIHV0IHZlc3RpYnVsdW0gaW50ZWdlciwgcHVydXMgc2VkIGxvcmVtIHB1bHZpbmFyIGhhYml0YXNzZSB0dXJwaXMuCiAgICAgICAgICAgICAgICArPC92LWNhcmQtdGV4dD4KICAgICAgICAgICAgICAgIDx2LWNhcmQtYWN0aW9ucz4KICAgICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICAgICAgPHYtYnRuIGNvbG9yPSJlcnJvciIgdGV4dCBAY2xpY2s9ImRpYWxvZyA9IGZhbHNlIj5EaXNhZ3JlZTwvdi1idG4+CiAgICAgICAgICAgICAgICA8di1idG4gY29sb3I9InN1Y2Nlc3MiIHRleHQgQGNsaWNrPSJkaWFsb2cgPSBmYWxzZSI+QWdyZWU8L3YtYnRuPgogICAgICAgICAgICAgICAgPC92LWNhcmQtYWN0aW9ucz4KICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgIDwvdi1kaWFsb2c+CiAgICA8L2Rpdj4KPC9kaXY+Cg=="},null]}