{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/grids/GridsAutosizeColumns.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/grids/GridsAutosizeColumns.vue","mtime":1627753466719},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR3JpZHNBdXRvc2l6ZUNvbHVtbnMiLAoKICBkYXRhOiAoKSA9PiAoewogIH0pCn07Cg=="},{"version":3,"sources":["GridsAutosizeColumns.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;;AAEA;AACA;AACA","file":"GridsAutosizeColumns.vue","sourceRoot":"src/components/vuetifyComponents/grids","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- GridsAutosizeColumns -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n           Columns will automatically take up an equal amount of space within their parent container. This can be modified using the cols prop. You can also utilize the sm, md, lg, and xl props to further define how the column will be sized in different viewport sizes.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-container class=\"grey lighten-5\">\n                <v-row\n                v-for=\"n in 2\"\n                :key=\"n\"\n                :class=\"n === 1 ? 'mb-6' : ''\"\n                no-gutters\n                >\n                <v-col\n                    v-for=\"k in n + 1\"\n                    :key=\"k\"\n                >\n                    <v-card\n                    class=\"pa-2\"\n                    outlined\n                    tile\n                    >\n                    {{ k }} of {{ n + 1 }}\n                    </v-card>\n                </v-col>\n                </v-row>\n            </v-container>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"GridsAutosizeColumns\",\n\n  data: () => ({\n  })\n};\n</script>"]}]}