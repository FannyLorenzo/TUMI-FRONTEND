{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/progress-linear/ProgressLinearBuffer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/progress-linear/ProgressLinearBuffer.vue","mtime":1627753466723},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvZ3Jlc3NMaW5lYXJCdWZmZXIiLAoKICBkYXRhOiAoKSA9PiAoewogICAgICB2YWx1ZTogMTAsCiAgICAgICAgYnVmZmVyVmFsdWU6IDIwLAogICAgICAgIGludGVydmFsOiAwLAogIH0pLAogIHdhdGNoOiB7CiAgICAgIHZhbHVlICh2YWwpIHsKICAgICAgICBpZiAodmFsIDwgMTAwKSByZXR1cm4KCiAgICAgICAgdGhpcy52YWx1ZSA9IDAKICAgICAgICB0aGlzLmJ1ZmZlclZhbHVlID0gMTAKICAgICAgICB0aGlzLnN0YXJ0QnVmZmVyKCkKICAgICAgfSwKICAgIH0sCgogICAgbW91bnRlZCAoKSB7CiAgICAgIHRoaXMuc3RhcnRCdWZmZXIoKQogICAgfSwKCiAgICBiZWZvcmVEZXN0cm95ICgpIHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKQogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgIHN0YXJ0QnVmZmVyICgpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpCgogICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICB0aGlzLnZhbHVlICs9IE1hdGgucmFuZG9tKCkgKiAoMTUgLSA1KSArIDUKICAgICAgICAgIHRoaXMuYnVmZmVyVmFsdWUgKz0gTWF0aC5yYW5kb20oKSAqICgxNSAtIDUpICsgNgogICAgICAgIH0sIDIwMDApCiAgICAgIH0sCiAgICB9LAoKfTsK"},{"version":3,"sources":["ProgressLinearBuffer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ProgressLinearBuffer.vue","sourceRoot":"src/components/vuetifyComponents/progress-linear","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- ProgressLinearBuffer -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        A buffer state represents two values simultaneously. The primary value is controlled by <code>v-model</code>, whereas the buffer is controlled by the <code>buffer-value</code> prop.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-progress-linear\n            v-model=\"value\"\n            :buffer-value=\"bufferValue\"\n            ></v-progress-linear>\n            <br>\n            <v-progress-linear\n            v-model=\"value\"\n            :buffer-value=\"bufferValue\"\n            color=\"error\"\n            ></v-progress-linear>\n            <br>\n            <v-progress-linear\n            v-model=\"value\"\n            :buffer-value=\"bufferValue\"\n            color=\"success\"\n            ></v-progress-linear>\n            <br>\n            <v-progress-linear\n            v-model=\"value\"\n            :buffer-value=\"bufferValue\"\n            color=\"warning\"\n            ></v-progress-linear>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProgressLinearBuffer\",\n\n  data: () => ({\n      value: 10,\n        bufferValue: 20,\n        interval: 0,\n  }),\n  watch: {\n      value (val) {\n        if (val < 100) return\n\n        this.value = 0\n        this.bufferValue = 10\n        this.startBuffer()\n      },\n    },\n\n    mounted () {\n      this.startBuffer()\n    },\n\n    beforeDestroy () {\n      clearInterval(this.interval)\n    },\n\n    methods: {\n      startBuffer () {\n        clearInterval(this.interval)\n\n        this.interval = setInterval(() => {\n          this.value += Math.random() * (15 - 5) + 5\n          this.bufferValue += Math.random() * (15 - 5) + 6\n        }, 2000)\n      },\n    },\n\n};\n</script>"]}]}