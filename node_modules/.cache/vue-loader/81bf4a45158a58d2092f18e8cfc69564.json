{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/expansionpanel/ExpansionExternalControl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/expansionpanel/ExpansionExternalControl.vue","mtime":1627753466715},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRXhwYW5zaW9uRXh0ZXJuYWxDb250cm9sIiwKCiAgZGF0YTogKCkgPT4gKHsKICAgICAgcGFuZWw6IFtdLAogICAgICAgIGl0ZW1zOiA1LAogIH0pLAogIG1ldGhvZHM6IHsKICAgICAgLy8gQ3JlYXRlIGFuIGFycmF5IHRoZSBsZW5ndGggb2Ygb3VyIGl0ZW1zCiAgICAgIC8vIHdpdGggYWxsIHZhbHVlcyBhcyB0cnVlCiAgICAgIGFsbCAoKSB7CiAgICAgICAgdGhpcy5wYW5lbCA9IFsuLi5BcnJheSh0aGlzLml0ZW1zKS5rZXlzKCldLm1hcCgoaywgaSkgPT4gaSkKICAgICAgfSwKICAgICAgLy8gUmVzZXQgdGhlIHBhbmVsCiAgICAgIG5vbmUgKCkgewogICAgICAgIHRoaXMucGFuZWwgPSBbXQogICAgICB9LAogICAgfSwKfTsK"},{"version":3,"sources":["ExpansionExternalControl.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExpansionExternalControl.vue","sourceRoot":"src/components/vuetifyComponents/expansionpanel","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- Small variant -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n       <v-list-item-subtitle class=\"text-wrap\">\n        Expansion panels can be controlled externally by modifying the <code>v-model</code>. Its value corresponds to a zero-based index of the currently opened expansion panel content. If <code>multiple</code> prop is used then it is an array containing the indices of the open items.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <div class=\"text-center d-flex pb-4\">\n                <v-btn @click=\"all\">all</v-btn>\n                <div>{{ panel }}</div>\n                <v-btn @click=\"none\">none</v-btn>\n                </div>\n\n                <v-expansion-panels\n                v-model=\"panel\"\n                multiple\n                >\n                <v-expansion-panel\n                    v-for=\"(item,i) in items\"\n                    :key=\"i\"\n                >\n                    <v-expansion-panel-header>Header {{ item }}</v-expansion-panel-header>\n                    <v-expansion-panel-content>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    </v-expansion-panel-content>\n                </v-expansion-panel>\n                </v-expansion-panels>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"ExpansionExternalControl\",\n\n  data: () => ({\n      panel: [],\n        items: 5,\n  }),\n  methods: {\n      // Create an array the length of our items\n      // with all values as true\n      all () {\n        this.panel = [...Array(this.items).keys()].map((k, i) => i)\n      },\n      // Reset the panel\n      none () {\n        this.panel = []\n      },\n    },\n};\n</script>"]}]}