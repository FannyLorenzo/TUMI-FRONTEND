{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewSearchingDirectory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewSearchingDirectory.vue","mtime":1627753466731},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlZXZpZXdTZWFyY2hpbmdEaXJlY3RvcnkiLAoKICBkYXRhOiAoKSA9PiAoewogICAgICBpdGVtczogWwogICAgICAgIHsKICAgICAgICAgIGlkOiAxLAogICAgICAgICAgbmFtZTogJ1Z1ZXRpZnkgSHVtYW4gUmVzb3VyY2VzJywKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBpZDogMiwKICAgICAgICAgICAgICBuYW1lOiAnQ29yZSB0ZWFtJywKICAgICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBpZDogMjAxLAogICAgICAgICAgICAgICAgICBuYW1lOiAnSm9obicsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBpZDogMjAyLAogICAgICAgICAgICAgICAgICBuYW1lOiAnS2FlbCcsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBpZDogMjAzLAogICAgICAgICAgICAgICAgICBuYW1lOiAnTmVrb3NhdXInLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgaWQ6IDIwNCwKICAgICAgICAgICAgICAgICAgbmFtZTogJ0phY2VrJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGlkOiAyMDUsCiAgICAgICAgICAgICAgICAgIG5hbWU6ICdBbmRyZXcnLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgaWQ6IDMsCiAgICAgICAgICAgICAgbmFtZTogJ0FkbWluaXN0cmF0b3JzJywKICAgICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBpZDogMzAxLAogICAgICAgICAgICAgICAgICBuYW1lOiAnUmFuZWUnLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgaWQ6IDMwMiwKICAgICAgICAgICAgICAgICAgbmFtZTogJ1JhY2hlbCcsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBpZDogNCwKICAgICAgICAgICAgICBuYW1lOiAnQ29udHJpYnV0b3JzJywKICAgICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBpZDogNDAxLAogICAgICAgICAgICAgICAgICBuYW1lOiAnUGhsb3cnLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgaWQ6IDQwMiwKICAgICAgICAgICAgICAgICAgbmFtZTogJ0JyYW5kb24nLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgaWQ6IDQwMywKICAgICAgICAgICAgICAgICAgbmFtZTogJ1NlYW4nLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICB9LAogICAgICAgICAgXSwKICAgICAgICB9LAogICAgICBdLAogICAgICBvcGVuOiBbMSwgMl0sCiAgICAgIHNlYXJjaDogbnVsbCwKICAgICAgY2FzZVNlbnNpdGl2ZTogZmFsc2UsCiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgICAgZmlsdGVyICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5jYXNlU2Vuc2l0aXZlCiAgICAgICAgICA/IChpdGVtLCBzZWFyY2gsIHRleHRLZXkpID0+IGl0ZW1bdGV4dEtleV0uaW5kZXhPZihzZWFyY2gpID4gLTEKICAgICAgICAgIDogdW5kZWZpbmVkCiAgICAgIH0sCiAgICB9LAp9Owo="},{"version":3,"sources":["TreeviewSearchingDirectory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeviewSearchingDirectory.vue","sourceRoot":"src/components/vuetifyComponents/treeview","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- TreeviewSearchingDirectory -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        Easily filter your treeview by using the search prop. You can easily apply your custom filtering function if you need case-sensitive or fuzzy filtering by setting the filter prop. This works similar to the v-autocomplete component.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-card\n                class=\"mx-auto\"\n                max-width=\"500\"\n            >\n                <v-sheet class=\"pa-4 info\">\n                <v-text-field\n                    v-model=\"search\"\n                    label=\"Search Company Directory\"\n                    dark\n                    flat\n                    solo-inverted\n                    hide-details\n                    clearable\n                    clear-icon=\"mdi-close-circle-outline\"\n                ></v-text-field>\n                <v-checkbox\n                    v-model=\"caseSensitive\"\n                    dark\n                    hide-details\n                    label=\"Case sensitive search\"\n                ></v-checkbox>\n                </v-sheet>\n                <v-card-text>\n                <v-treeview\n                    :items=\"items\"\n                    :search=\"search\"\n                    :filter=\"filter\"\n                    :open.sync=\"open\"\n                >\n                    <template v-slot:prepend=\"{ item }\">\n                    <v-icon\n                        v-if=\"item.children\"\n                        v-text=\"`mdi-${item.id === 1 ? 'home-variant' : 'folder-network'}`\"\n                    ></v-icon>\n                    </template>\n                </v-treeview>\n                </v-card-text>\n            </v-card>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"TreeviewSearchingDirectory\",\n\n  data: () => ({\n      items: [\n        {\n          id: 1,\n          name: 'Vuetify Human Resources',\n          children: [\n            {\n              id: 2,\n              name: 'Core team',\n              children: [\n                {\n                  id: 201,\n                  name: 'John',\n                },\n                {\n                  id: 202,\n                  name: 'Kael',\n                },\n                {\n                  id: 203,\n                  name: 'Nekosaur',\n                },\n                {\n                  id: 204,\n                  name: 'Jacek',\n                },\n                {\n                  id: 205,\n                  name: 'Andrew',\n                },\n              ],\n            },\n            {\n              id: 3,\n              name: 'Administrators',\n              children: [\n                {\n                  id: 301,\n                  name: 'Ranee',\n                },\n                {\n                  id: 302,\n                  name: 'Rachel',\n                },\n              ],\n            },\n            {\n              id: 4,\n              name: 'Contributors',\n              children: [\n                {\n                  id: 401,\n                  name: 'Phlow',\n                },\n                {\n                  id: 402,\n                  name: 'Brandon',\n                },\n                {\n                  id: 403,\n                  name: 'Sean',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      open: [1, 2],\n      search: null,\n      caseSensitive: false,\n  }),\n  computed: {\n      filter () {\n        return this.caseSensitive\n          ? (item, search, textKey) => item[textKey].indexOf(search) > -1\n          : undefined\n      },\n    },\n};\n</script>"]}]}