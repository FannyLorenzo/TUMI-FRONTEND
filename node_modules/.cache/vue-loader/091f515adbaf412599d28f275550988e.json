{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/autocompletes/AutocompletesCustomFilter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/autocompletes/AutocompletesCustomFilter.vue","mtime":1627753466707},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXV0b2NvbXBsZXRlc0N1c3RvbUZpbHRlciIsCgogIGRhdGE6ICgpID0+ICh7CiAgICBoYXNTYXZlZDogZmFsc2UsCiAgICBpc0VkaXRpbmc6IG51bGwsCiAgICBtb2RlbDogbnVsbCwKICAgIHN0YXRlczogWwogICAgICB7IG5hbWU6ICJGbG9yaWRhIiwgYWJicjogIkZMIiwgaWQ6IDEgfSwKICAgICAgeyBuYW1lOiAiR2VvcmdpYSIsIGFiYnI6ICJHQSIsIGlkOiAyIH0sCiAgICAgIHsgbmFtZTogIk5lYnJhc2thIiwgYWJicjogIk5FIiwgaWQ6IDMgfSwKICAgICAgeyBuYW1lOiAiQ2FsaWZvcm5pYSIsIGFiYnI6ICJDQSIsIGlkOiA0IH0sCiAgICAgIHsgbmFtZTogIk5ldyBZb3JrIiwgYWJicjogIk5ZIiwgaWQ6IDUgfSwKICAgIF0sCiAgfSksCiAgbWV0aG9kczogewogICAgY3VzdG9tRmlsdGVyKGl0ZW0sIHF1ZXJ5VGV4dCkgewogICAgICBjb25zdCB0ZXh0T25lID0gaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCk7CiAgICAgIGNvbnN0IHRleHRUd28gPSBpdGVtLmFiYnIudG9Mb3dlckNhc2UoKTsKICAgICAgY29uc3Qgc2VhcmNoVGV4dCA9IHF1ZXJ5VGV4dC50b0xvd2VyQ2FzZSgpOwoKICAgICAgcmV0dXJuICgKICAgICAgICB0ZXh0T25lLmluZGV4T2Yoc2VhcmNoVGV4dCkgPiAtMSB8fCB0ZXh0VHdvLmluZGV4T2Yoc2VhcmNoVGV4dCkgPiAtMQogICAgICApOwogICAgfSwKICAgIHNhdmUoKSB7CiAgICAgIHRoaXMuaXNFZGl0aW5nID0gIXRoaXMuaXNFZGl0aW5nOwogICAgICB0aGlzLmhhc1NhdmVkID0gdHJ1ZTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["AutocompletesCustomFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutocompletesCustomFilter.vue","sourceRoot":"src/components/vuetifyComponents/autocompletes","sourcesContent":["<template>\n  <!-- ----------------------------------------------------------------------------- -->\n  <!-- Autocompletes Custom Filter -->\n  <!-- ----------------------------------------------------------------------------- -->\n  <div>\n    <v-list-item-subtitle class=\"text-wrap\">\n      The <code>filter</code> prop can be used to filter each individual item\n      with custom logic. In this example we filter items by name\n    </v-list-item-subtitle>\n    <div class=\"mt-4 border\">\n      <v-card class=\"overflow-hidden\" color=\"white\" light>\n        <v-toolbar flat color=\"white\">\n          <v-icon>mdi-account</v-icon>\n          <v-toolbar-title class=\"font-weight-light\"\n            >User Profile</v-toolbar-title\n          >\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" fab small @click=\"isEditing = !isEditing\">\n            <v-icon v-if=\"isEditing\">mdi-close</v-icon>\n            <v-icon v-else>mdi-pencil</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          <v-text-field\n            :disabled=\"!isEditing\"\n            color=\"white\"\n            label=\"Name\"\n          ></v-text-field>\n          <v-autocomplete\n            :disabled=\"!isEditing\"\n            :items=\"states\"\n            :filter=\"customFilter\"\n            color=\"white\"\n            item-text=\"name\"\n            label=\"State\"\n          ></v-autocomplete>\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn :disabled=\"!isEditing\" color=\"success\" @click=\"save\">\n            Save\n          </v-btn>\n        </v-card-actions>\n        <v-snackbar v-model=\"hasSaved\" :timeout=\"2000\" absolute bottom left>\n          Your profile has been updated\n        </v-snackbar>\n      </v-card>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AutocompletesCustomFilter\",\n\n  data: () => ({\n    hasSaved: false,\n    isEditing: null,\n    model: null,\n    states: [\n      { name: \"Florida\", abbr: \"FL\", id: 1 },\n      { name: \"Georgia\", abbr: \"GA\", id: 2 },\n      { name: \"Nebraska\", abbr: \"NE\", id: 3 },\n      { name: \"California\", abbr: \"CA\", id: 4 },\n      { name: \"New York\", abbr: \"NY\", id: 5 },\n    ],\n  }),\n  methods: {\n    customFilter(item, queryText) {\n      const textOne = item.name.toLowerCase();\n      const textTwo = item.abbr.toLowerCase();\n      const searchText = queryText.toLowerCase();\n\n      return (\n        textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1\n      );\n    },\n    save() {\n      this.isEditing = !this.isEditing;\n      this.hasSaved = true;\n    },\n  },\n};\n</script>"]}]}