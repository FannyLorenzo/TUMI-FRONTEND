{"remainingRequest":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewSelectionType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/src/components/vuetifyComponents/treeview/TreeviewSelectionType.vue","mtime":1627753466731},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fanny/Documentos/CURSOS/GES/tumi_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlZXZpZXdTZWxlY3Rpb25UeXBlIiwKCiAgZGF0YTogKCkgPT4gKHsKICAgICAgc2VsZWN0aW9uVHlwZTogJ2xlYWYnLAogICAgICBzZWxlY3Rpb246IFtdLAogICAgICBpdGVtczogWwogICAgICAgIHsKICAgICAgICAgIGlkOiAxLAogICAgICAgICAgbmFtZTogJ1Jvb3QnLAogICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgeyBpZDogMiwgbmFtZTogJ0NoaWxkICMxJyB9LAogICAgICAgICAgICB7IGlkOiAzLCBuYW1lOiAnQ2hpbGQgIzInIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBpZDogNCwKICAgICAgICAgICAgICBuYW1lOiAnQ2hpbGQgIzMnLAogICAgICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgICB7IGlkOiA1LCBuYW1lOiAnR3JhbmRjaGlsZCAjMScgfSwKICAgICAgICAgICAgICAgIHsgaWQ6IDYsIG5hbWU6ICdHcmFuZGNoaWxkICMyJyB9LAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICBdLAogICAgICAgIH0sCiAgICAgIF0sCiAgfSksCn07Cg=="},{"version":3,"sources":["TreeviewSelectionType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeviewSelectionType.vue","sourceRoot":"src/components/vuetifyComponents/treeview","sourcesContent":["<template>\n    <!-- ----------------------------------------------------------------------------- -->\n    <!-- TreeviewSelectionType -->\n    <!-- ----------------------------------------------------------------------------- -->\n    <div>\n        <v-list-item-subtitle class=\"text-wrap\">\n        Treeview now supports two different selection types. The default type is 'leaf', which will only include leaf nodes in the v-model array, but will render parent nodes as either partially or fully selected. The alternative mode is 'independent', which allows one to select parent nodes, but each node is independent of its parent and children.\n        </v-list-item-subtitle>\n        <div class=\"mt-4\">\n            <v-select v-model=\"selectionType\" :items=\"['leaf', 'independent']\" label=\"Selection type\"></v-select>\n            <v-row>\n            <v-col>\n                <v-treeview\n                v-model=\"selection\"\n                :items=\"items\"\n                :selection-type=\"selectionType\"\n                selectable\n                return-object\n                open-all\n                ></v-treeview>\n            </v-col>\n            <v-divider vertical></v-divider>\n            <v-col class=\"pa-6\" cols=\"6\">\n                <template v-if=\"!selection.length\">\n                No nodes selected.\n                </template>\n                <template v-else>\n                <div v-for=\"node in selection\" :key=\"node.id\">\n                    {{ node.name }}\n                </div>\n                </template>\n            </v-col>\n            </v-row>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: \"TreeviewSelectionType\",\n\n  data: () => ({\n      selectionType: 'leaf',\n      selection: [],\n      items: [\n        {\n          id: 1,\n          name: 'Root',\n          children: [\n            { id: 2, name: 'Child #1' },\n            { id: 3, name: 'Child #2' },\n            {\n              id: 4,\n              name: 'Child #3',\n              children: [\n                { id: 5, name: 'Grandchild #1' },\n                { id: 6, name: 'Grandchild #2' },\n              ],\n            },\n          ],\n        },\n      ],\n  }),\n};\n</script>"]}]}